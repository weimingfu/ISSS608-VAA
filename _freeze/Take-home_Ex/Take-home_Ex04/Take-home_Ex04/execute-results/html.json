{
  "hash": "a5589202e7644a0bb2e02183491dc0b6",
  "result": {
    "markdown": "---\ntitle: \"Prototyping Modules for Visual Analytics Shiny Application\"\nsubtitle: \"Take-home Exercise 4\"\nauthor: \"Fu Weiming\"\ndate: \"March 9, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\neditor: visual\nformat:\n  html:\n    code-fold: true\n    code-tools:\n      source: false\n---\n\n\n# 1 Overview\n\n------------------------------------------------------------------------\n\n## 1.1 Setting the scene\n\nThis exercise serves as a prototype for one of the modules, i.e. the nowcasting / forecasting models, used in the group's proposed Shiny application for the Visual Analytics Project. Prototyping of the Shiny App has the following benefits:\n\n-   Validate the feasibility and effectiveness of your ideas or analytical approaches\n-   Gather feedback from stakeholders or end-users early in the development process\n-   Iteratively update the prototype, adding new features, improving usability, and refining visualizations until the desired outcome is achieved\n-   Facilitates collaboration among team members or stakeholders\n-   Identify and address potential issues early in the development process\n\n## 1.2 The task\n\nAs part of this prototyping exercise, the following objectives are fulfilled:\n\n-   Identified and evaluated the necessary R packages in R CRAN\n-   Prepared and tested the R codes for the models\n-   Determined the parameters and outputs that will be exposed on the Shiny applications\n-   Selected the appropriate Shiny UI components for exposing the parameters\n\n## 1.3 Problem statement of group project\n\nForecasting Singapore’s private housing index is beset with difficulties, arising from the complex interplay among several factors such as economic indicators, employment trends, policy changes, and current market sentiments. The intricacy is further intensified by the delayed nature of crucial indices and indicators, which are commonly released with a substantial time delay, usually spanning from one to three months. These delays impede the capacity to accurately predict private house price changes, as the most up-to-date data required for precise forecasts is not easily accessible.\n\nTo tackle this problem, it is necessary to utlilise nowcasting models that can precisely forecast the future direction of the Singapore private housing market. The objective is to utilize these models to provide stakeholders, including homebuyers, sellers, investors, and policy makers, with timely and convenient access to predictive data via visual analytics.\n\n## 1.4 The Data\n\nThis study will utilize datasets obtained from official government portals and CEIC, encompassing a range of economic indicators:\n\n-   **Singapore Private Residential Property Price Index**: A quarterly index tracking changes from March 1975 to June 2023.\n-   **Singapore Domestic Interest Rates**: The daily SORA Index data spanning from Jul 2005 to January 2024.\n-   **Straits Times Index (STI)**: Daily STI values from April 1985 to January 2024, reflecting stock market trends.\n-   **Prices of Raw Materials**: Monthly indices for cement, steel bars, granite, concreting sand, and ready-mixed concrete, providing insight into construction cost dynamics.\n-   **Unemployment Rate**: Quarterly data on the percentage of unemployed individuals from March 1992 to December 2023, offering a measure of labor market health.\n\nAs SORA rates are only available from Jul 2005 onwards, the period of analysis and modelling of the private residential property price index will be done from 2005 onwards, since we expect interest rates to have an impact on the price index.\n\n# 2 Data Preparation\n\n------------------------------------------------------------------------\n\n## 2.1 **Loading R packages**\n\nThe `pacman::p_load()` function is used to install and load the required R packages into the R environment, as below.\n\n-   [tidyverse](https://www.tidyverse.org/): collection of R packages designed for data science\n-   [randomForest](https://cran.r-project.org/web/packages/randomForest/): an R library for classification and regression based on a forest of trees using random inputs\n-   [plotly](https://plotly.com/r/): an R graphing library for plotting interactive, publication-quality graphs\n-   [gbm](https://cran.r-project.org/web/packages/gbm/): an R library for Freund and Schapire's AdaBoost algorithm and Friedman's gradient boosting machine\n-   [prophet](https://cran.r-project.org/web/packages/prophet/index.html): an R library that implements a procedure for forecasting time series data based on an additive model developed by Facebook\n-   [knitr](https://cran.r-project.org/web/packages/knitr/): an R package for dynamic report generation\n-   [patchwork](https://cran.r-project.org/web/packages/patchwork/): an R package for preparing composite figure created using ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\npacman::p_load(tidyverse, randomForest, plotly, gbm, prophet, knitr, patchwork)\n```\n:::\n\n\n## 2.2 Importing data\n\nThe following code chunks uses read_csv to read the time series values of the different datasets listed in 1.4.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nppi <- read_csv('data/PPI_private_housing.csv') %>% \n  setNames(c('Date', 'PR_All', 'PR_Landed', 'PR_NL_ALL', 'PR_NL_CCR', 'PR_NL_RCR', 'PR_NL_OCR')) %>%\n  mutate(Date = as.Date(Date, format = '%d/%m/%Y')) %>% \n  mutate(Month = month(Date)) %>% \n  mutate(Date = year(Date)) %>% \n  rename(Year = Date) %>% \n  mutate(Year = as.factor(Year))\n\nmaterial_price <- read_csv('data/Construction Materials prices.csv') %>% \n  setNames(c('Date', 'Cement', 'SteelBar', 'Granite', 'ConcretingSand', 'ReadyMixConcrete')) %>% \n  mutate(Date = as.Date(Date, format = '%d/%m/%Y')) %>% \n  mutate(Year = year(Date)) %>% \n  mutate(Month = month(Date)) %>% \n  mutate(Year = as.factor(Year)) %>% \n  mutate(Month = as.factor(Month))\n\nsti <- read_csv('data/Index FTSE Strait Times.csv') %>% \n  setNames(c('Date', 'Index')) %>% \n  mutate(Date = as.Date(Date, format = '%d/%m/%Y')) %>% \n  mutate(Year = year(Date)) %>% \n  mutate(Month = month(Date)) %>% \n  mutate(Day = day(Date)) %>% \n  mutate(Year = as.factor(Year)) %>% \n  mutate(Month = as.factor(Month))\n\ntbillbond <- read_csv('data/Treasury_Bill_Bond_ rates.csv') %>% \n  setNames(c('Date', 'Bill1Yr', 'Bond2Yr', 'Bond5Yr', 'Bond10Yr', 'Bond15Yr', 'Bond20Yr','Bond30Yr')) %>% \n  mutate(Date = as.Date(Date, format = '%d/%m/%Y')) %>% \n  mutate(Year = year(Date)) %>% \n  mutate(Month = month(Date)) %>% \n  mutate(Day = day(Date)) %>% \n  mutate(Year = as.factor(Year)) %>% \n  mutate(Month = as.factor(Month)) %>% \n  select(-Bond15Yr, -Bond20Yr, -Bond30Yr)\n\nsora <- read_csv('data/Singapore Overnight Rate Average SORA Daily.csv') %>% \n  setNames(c('Date', 'Rate')) %>% \n  mutate(Date = as.Date(Date, format = '%d/%m/%Y')) %>% \n  mutate(Year = year(Date)) %>% \n  mutate(Month = month(Date)) %>% \n  mutate(Day = day(Date)) %>% \n  mutate(Year = as.factor(Year)) %>% \n  mutate(Month = as.factor(Month))\n```\n:::\n\n\n## 2.3 Data Wrangling\n\nThe following code chunks are used to compute the change over a (quarterly) period (for SORA and Bond/Bill rates) and percentage change (for the property price indices, STI and prices of raw materials).\n\n::: panel-tabset\n#### Property Price Index\n\nThe code chunk computes percentage change in property price index per quarter.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nppi_quarter <- ppi %>% \n  mutate(`PCChange_PR_All` = (PR_All - lag(PR_All))/lag(PR_All)*100) %>% \n  mutate(`PCChange_PR_Landed` = (PR_Landed - lag(PR_Landed))/lag(PR_Landed)*100) %>% \n  mutate(`PCChange_PR_NL_ALL` = (PR_NL_ALL - lag(PR_NL_ALL))/lag(PR_NL_ALL)*100) %>% \n  mutate(`PCChange_PR_NL_CCR` = (PR_NL_CCR - lag(PR_NL_CCR))/lag(PR_NL_CCR)*100) %>% \n  mutate(`PCChange_PR_NL_RCR` = (PR_NL_RCR - lag(PR_NL_RCR))/lag(PR_NL_RCR)*100) %>% \n  mutate(`PCChange_PR_NL_OCR` = (PR_NL_OCR - lag(PR_NL_OCR))/lag(PR_NL_OCR)*100) %>% \n  mutate(Quarter = case_when(\n    Month == 3 ~ 'Q1',\n    Month == 6 ~ 'Q2',\n    Month == 9 ~ 'Q3',\n    Month == 12 ~ 'Q4'\n  )) %>% \n  select(-Month) %>% \n  select('Year','Quarter',everything())\n```\n:::\n\n\n#### Raw material pricess\n\nThe code chunk computes average monthly / quarterly values and percentage change in raw material prices per month / quarter.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# material price_month - percentage change computations\nmaterial_price_month <- material_price %>% \n  mutate(`PCChange_Cement` = (Cement - lag(Cement))/lag(Cement)*100) %>% \n  mutate(`PCChange_SteelBar` = (SteelBar - lag(SteelBar))/lag(SteelBar)*100) %>%\n  mutate(`PCChange_Granite` = (Granite - lag(Granite))/lag(Granite)*100) %>%\n  mutate(`PCChange_ConcretingSand` = (ConcretingSand - lag(ConcretingSand))/lag(ConcretingSand)*100) %>%\n  mutate(`PCChange_ReadyMixConcrete` = (ReadyMixConcrete - lag(ReadyMixConcrete))/lag(ReadyMixConcrete)*100) %>% \n  select(-Date) %>% \n  select(Year, Month, everything())\n\n# material price_quarter_avg - percentage change computations\nmaterial_price_quarter_avg <- material_price %>%\n  mutate(Quarter = case_when(\n    (Month == 1 | Month == 2 | Month == 3) ~ 'Q1',\n    (Month == 4 | Month == 5 | Month == 6) ~ 'Q2',\n    (Month == 7 | Month == 8 | Month == 9) ~ 'Q3',\n    (Month == 10 | Month == 11 | Month == 12) ~ 'Q4'\n  )) %>%\n  select(-Date, -Month) %>%\n  group_by(Year, Quarter) %>% \n  summarise_all(.funs=mean) %>% \n  ungroup() %>% \n  mutate(`PCChange_Cement` = (Cement - lag(Cement))/lag(Cement)*100) %>% \n  mutate(`PCChange_SteelBar` = (SteelBar - lag(SteelBar))/lag(SteelBar)*100) %>%\n  mutate(`PCChange_Granite` = (Granite - lag(Granite))/lag(Granite)*100) %>%\n  mutate(`PCChange_ConcretingSand` = (ConcretingSand - lag(ConcretingSand))/lag(ConcretingSand)*100) %>%\n  mutate(`PCChange_ReadyMixConcrete` = (ReadyMixConcrete - lag(ReadyMixConcrete))/lag(ReadyMixConcrete)*100) %>% \n  select(Year, Quarter, everything())\n```\n:::\n\n\n#### Straits Times Index\n\nThe code chunk computes average monthly / quarterly values and percentage change in Straits Times Index per month / quarter.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# sti_month_avg - percentage change computations\nsti_month_avg <- sti %>% \n  group_by(Year, Month) %>% \n  summarise_all(.funs=mean) %>%\n  ungroup() %>% \n  mutate(`PCChange_Index` = (Index - lag(Index))/lag(Index)*100) %>% \n  select(-Date, -Day) %>% \n  select(Year, Month, everything())\n  \n# sti_quarter_avg - percentage change computations\nsti_quarter_avg <- sti %>% \n  mutate(Quarter = case_when(\n    (Month == 1 | Month == 2 | Month == 3) ~ 'Q1',\n    (Month == 4 | Month == 5 | Month == 6) ~ 'Q2',\n    (Month == 7 | Month == 8 | Month == 9) ~ 'Q3',\n    (Month == 10 | Month == 11 | Month == 12) ~ 'Q4'\n  )) %>% \n  select(-Date, -Month, -Day) %>%\n  group_by(Year, Quarter) %>% \n  summarise_all(.funs=mean) %>%         \n  ungroup() %>%\n  mutate(`PCChange_Index` = (Index - lag(Index))/lag(Index)*100) %>% \n  select(Year, Quarter, everything())\n```\n:::\n\n\n#### Bill and Bond rates\n\nThe code chunk computes average monthly / quarterly values and change in rates per month / quarter.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# tbillbond_month - rate change computations\ntbillbond_month_avg <- tbillbond %>% \n  group_by(Year, Month) %>% \n  summarise_all(.funs=mean) %>%\n  ungroup() %>% \n  mutate(`Change_Bill1Yr` = Bill1Yr - lag(Bill1Yr)) %>% \n  mutate(`Change_Bond2Yr` = Bond2Yr - lag(Bond2Yr)) %>% \n  mutate(`Change_Bond5Yr` = Bond5Yr - lag(Bond5Yr)) %>% \n  mutate(`Change_Bond10Yr` = Bond10Yr - lag(Bond10Yr)) %>% \n  select(-Date, -Day) %>% \n  select(Year, Month, everything())\n\n# tbillbond_quarter_avg - percentage change computations\ntbillbond_quarter_avg <- tbillbond %>% \n  mutate(Quarter = case_when(\n    (Month == 1 | Month == 2 | Month == 3) ~ 'Q1',\n    (Month == 4 | Month == 5 | Month == 6) ~ 'Q2',\n    (Month == 7 | Month == 8 | Month == 9) ~ 'Q3',\n    (Month == 10 | Month == 11 | Month == 12) ~ 'Q4'\n  )) %>% \n  select(-Date, -Month, -Day) %>% \n  group_by(Year, Quarter) %>% \n  summarise_all(.funs=mean) %>%\n  ungroup() %>%\n  mutate(`Change_Bill1Yr` = Bill1Yr - lag(Bill1Yr)) %>% \n  mutate(`Change_Bond2Yr` = Bond2Yr - lag(Bond2Yr)) %>% \n  mutate(`Change_Bond5Yr` = Bond5Yr - lag(Bond5Yr)) %>% \n  mutate(`Change_Bond10Yr` = Bond10Yr - lag(Bond10Yr)) %>% \n  select(Year, Quarter, everything())\n```\n:::\n\n\n#### SORA rate\n\nThe code chunk computes average monthly / quarterly values and change in SORA per month / quarter.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# sora_month - percentage change computations\nsora_month_avg <- sora %>% \n  group_by(Year, Month) %>% \n  summarise_all(.funs=mean) %>%\n  ungroup() %>% \n  mutate(`Change_Rate` = Rate - lag(Rate)) %>% \n  select(-Date, -Day) %>% \n  select(Year, Month, everything())\n\n# sora_quarter_avg - percentage change computations\nsora_quarter_avg <- sora %>% \n  mutate(Quarter = case_when(\n    (Month == 1 | Month == 2 | Month == 3) ~ 'Q1',\n    (Month == 4 | Month == 5 | Month == 6) ~ 'Q2',\n    (Month == 7 | Month == 8 | Month == 9) ~ 'Q3',\n    (Month == 10 | Month == 11 | Month == 12) ~ 'Q4'\n  )) %>%\n  select(-Date, -Month, -Day) %>%\n  group_by(Year, Quarter) %>% \n  summarise_all(.funs=mean) %>%\n  ungroup() %>%\n  mutate(`Change_Rate` = Rate - lag(Rate)) %>% \n  select(Year, Quarter, everything())\n```\n:::\n\n:::\n\nThe following code chunks combines all the separate datasets into 2 datasets, one for monthly frequency data (excludes property price indices as they are released every quarter), and another for quarterly frequency. These 2 datasets will be used as the datasets for the various modules in the group project.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# put all monthly data into 1 dataset\ndata_by_month <- material_price_month %>% \n  inner_join(sti_month_avg, by = c(\"Year\", \"Month\")) %>% \n  inner_join(tbillbond_month_avg, by = c(\"Year\", \"Month\")) %>% \n  inner_join(sora_month_avg, by = c(\"Year\", \"Month\")) %>% \n  mutate(MonthLabel = paste0(Month, 'M', as.character(Year))) %>% \n  mutate(Date = as.Date(paste0('01-', Month, '-', Year), format=\"%d-%m-%Y\")) %>% \n  select(Date, MonthLabel, everything(), -Year, -Month)\n\n# put all quarter data into 1 dataset\ndata_by_quarter <- ppi_quarter %>% \n  inner_join(material_price_quarter_avg, by = c(\"Year\", \"Quarter\")) %>% \n  inner_join(sti_quarter_avg, by = c(\"Year\", \"Quarter\")) %>% \n  inner_join(tbillbond_quarter_avg, by = c(\"Year\", \"Quarter\")) %>% \n  inner_join(sora_quarter_avg, by = c(\"Year\", \"Quarter\")) %>% \n  mutate(QuarterLabel = paste0(Quarter, as.character(Year)))  %>% \n  mutate(Date = paste0(Year, '-', ifelse(Quarter == \"Q1\", \"03\", \n                                      ifelse(Quarter == \"Q2\", \"06\",\n                                             ifelse(Quarter == \"Q3\", \"09\", \"12\"))), \"-01\")) %>% \n  mutate(Date = as.Date(Date)) %>% \n  select(Date, QuarterLabel, everything(), -Year, -Quarter)\n```\n:::\n\n\nThe code chunk below provides a summary of the datasets:\n\n::: panel-tabset\n#### Quarterly\n\nThe code chunk shows a sample of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable(head(data_by_quarter, 5))\n```\n\n::: {.cell-output-display}\n|Date       |QuarterLabel | PR_All| PR_Landed| PR_NL_ALL| PR_NL_CCR| PR_NL_RCR| PR_NL_OCR| PCChange_PR_All| PCChange_PR_Landed| PCChange_PR_NL_ALL| PCChange_PR_NL_CCR| PCChange_PR_NL_RCR| PCChange_PR_NL_OCR|   Cement| SteelBar|  Granite| ConcretingSand| ReadyMixConcrete| PCChange_Cement| PCChange_SteelBar| PCChange_Granite| PCChange_ConcretingSand| PCChange_ReadyMixConcrete|    Index| PCChange_Index|  Bill1Yr|  Bond2Yr|  Bond5Yr| Bond10Yr| Change_Bill1Yr| Change_Bond2Yr| Change_Bond5Yr| Change_Bond10Yr|     Rate| Change_Rate|\n|:----------|:------------|------:|---------:|---------:|---------:|---------:|---------:|---------------:|------------------:|------------------:|------------------:|------------------:|------------------:|--------:|--------:|--------:|--------------:|----------------:|---------------:|-----------------:|----------------:|-----------------------:|-------------------------:|--------:|--------------:|--------:|--------:|--------:|--------:|--------------:|--------------:|--------------:|---------------:|--------:|-----------:|\n|2005-09-01 |Q32005       |   83.3|      84.8|      83.1|      79.7|      94.1|      83.6|        1.215067|          0.8323424|           1.465202|           2.310655|          0.0000000|          0.0000000| 85.74000| 725.0000| 17.16667|       12.38000|         72.82000|       0.3902896|         -2.874903|        8.3298275|                5.033937|                 1.0874092| 2294.478|      5.5941065| 1.986308| 2.061692| 2.369385| 2.777538|     -0.0382955|     -0.0006886|     -0.0588694|      -0.0496044| 1.892952|          NA|\n|2005-12-01 |Q42005       |   84.5|      85.6|      84.4|      81.5|      94.1|      84.3|        1.440576|          0.9433962|           1.564380|           2.258469|          0.0000000|          0.8373206| 86.11000| 713.1300| 16.70000|       12.62333|         72.99000|       0.4315372|         -1.637241|       -2.7184466|                1.965536|                 0.2334523| 2292.180|     -0.1001599| 2.571581| 2.554839| 2.938871| 3.152258|      0.5852730|      0.4931464|      0.5694864|       0.3747196| 2.579068|   0.6861154|\n|2006-03-01 |Q12006       |   85.8|      86.8|      85.7|      82.5|      94.4|      84.5|        1.538461|          1.4018692|           1.540284|           1.226994|          0.3188098|          0.2372479| 87.44333| 690.2100| 15.92000|       13.67000|         72.93333|       1.5484071|         -3.214000|       -4.6706587|                8.291524|                -0.0776362| 2449.376|      6.8578995| 2.837705| 2.846393| 3.212459| 3.396557|      0.2661243|      0.2915547|      0.2735880|       0.2442993| 3.123131|   0.5440634|\n|2006-06-01 |Q22006       |   87.3|      88.2|      87.2|      86.3|      94.4|      85.8|        1.748252|          1.6129032|           1.750292|           4.606061|          0.0000000|          1.5384615| 87.89000| 741.2933| 15.93667|       14.17000|         73.20000|       0.5108070|          7.401129|        0.1046901|                3.657644|                 0.3656307| 2479.048|      1.2114177| 2.913226| 2.991613| 3.255000| 3.505323|      0.0755209|      0.1452195|      0.0425410|       0.1087652| 3.116852|  -0.0062795|\n|2006-09-01 |Q32006       |   89.6|      89.2|      90.0|      90.9|      94.8|      86.5|        2.634593|          1.1337868|           3.211009|           5.330243|          0.4237288|          0.8158508| 88.18667| 748.6667| 16.35000|       14.69333|         73.90000|       0.3375431|          0.994658|        2.5935997|                3.693249|                 0.9562842| 2462.789|     -0.6558311| 3.088437| 3.055625| 3.281719| 3.438125|      0.1752117|      0.0640121|      0.0267188|      -0.0671976| 3.231783|   0.1149312|\n:::\n:::\n\n\nThe code chunk provides a summary of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable(summary(data_by_quarter))\n```\n\n::: {.cell-output-display}\n|   |     Date          |QuarterLabel     |    PR_All    |  PR_Landed   |  PR_NL_ALL   |  PR_NL_CCR   |  PR_NL_RCR   |  PR_NL_OCR   |PCChange_PR_All  |PCChange_PR_Landed |PCChange_PR_NL_ALL |PCChange_PR_NL_CCR |PCChange_PR_NL_RCR |PCChange_PR_NL_OCR |    Cement     |   SteelBar    |   Granite    |ConcretingSand |ReadyMixConcrete |PCChange_Cement |PCChange_SteelBar |PCChange_Granite |PCChange_ConcretingSand |PCChange_ReadyMixConcrete |    Index    |PCChange_Index   |   Bill1Yr     |   Bond2Yr     |   Bond5Yr     |   Bond10Yr    |Change_Bill1Yr   |Change_Bond2Yr   |Change_Bond5Yr    |Change_Bond10Yr   |     Rate       | Change_Rate      |\n|:--|:------------------|:----------------|:-------------|:-------------|:-------------|:-------------|:-------------|:-------------|:----------------|:------------------|:------------------|:------------------|:------------------|:------------------|:--------------|:--------------|:-------------|:--------------|:----------------|:---------------|:-----------------|:----------------|:-----------------------|:-------------------------|:------------|:----------------|:--------------|:--------------|:--------------|:--------------|:----------------|:----------------|:-----------------|:-----------------|:---------------|:-----------------|\n|   |Min.   :2005-09-01 |Length:74        |Min.   : 83.3 |Min.   : 84.8 |Min.   : 83.1 |Min.   : 79.7 |Min.   : 94.1 |Min.   : 83.6 |Min.   :-14.0893 |Min.   :-9.1735    |Min.   :-15.1104   |Min.   :-16.2479   |Min.   :-16.9435   |Min.   :-7.3216    |Min.   : 75.37 |Min.   : 416.2 |Min.   :14.83 |Min.   :12.38  |Min.   : 72.82   |Min.   :-8.2837 |Min.   :-32.9593  |Min.   :-41.6501 |Min.   :-20.8906        |Min.   :-19.4708          |Min.   :1674 |Min.   :-33.7447 |Min.   :0.2477 |Min.   :0.1787 |Min.   :0.3778 |Min.   :0.8854 |Min.   :-0.99239 |Min.   :-0.89210 |Min.   :-0.825660 |Min.   :-0.686901 |Min.   :0.04001 |Min.   :-0.705511 |\n|   |1st Qu.:2010-03-24 |Class :character |1st Qu.:128.1 |1st Qu.:130.4 |1st Qu.:129.4 |1st Qu.:126.6 |1st Qu.:134.4 |1st Qu.:127.5 |1st Qu.: -0.4112 |1st Qu.:-0.8242    |1st Qu.: -0.2894   |1st Qu.: -0.5599   |1st Qu.: -0.5996   |1st Qu.:-0.1181    |1st Qu.: 85.90 |1st Qu.: 717.2 |1st Qu.:17.68 |1st Qu.:21.73  |1st Qu.: 90.61   |1st Qu.:-1.0824 |1st Qu.: -3.6214  |1st Qu.: -3.6486 |1st Qu.: -2.9350        |1st Qu.: -1.5607          |1st Qu.:2839 |1st Qu.: -1.5478 |1st Qu.:0.3574 |1st Qu.:0.4398 |1st Qu.:1.0908 |1st Qu.:1.8475 |1st Qu.:-0.06383 |1st Qu.:-0.07722 |1st Qu.:-0.108647 |1st Qu.:-0.165335 |1st Qu.:0.11305 |1st Qu.:-0.035194 |\n|   |Median :2014-10-16 |Mode  :character |Median :146.2 |Median :164.3 |Median :140.9 |Median :132.7 |Median :147.4 |Median :158.1 |Median :  0.7929 |Median : 0.9589    |Median :  0.7262   |Median :  0.6098   |Median :  0.4096   |Median : 1.0051    |Median : 93.42 |Median : 774.1 |Median :19.45 |Median :23.82  |Median :101.28   |Median : 0.2793 |Median : -1.0407  |Median :  0.1429 |Median : -0.2193        |Median : -0.1701          |Median :3118 |Median :  1.1822 |Median :0.9521 |Median :1.0306 |Median :1.5938 |Median :2.3358 |Median : 0.01834 |Median : 0.01397 |Median :-0.005920 |Median :-0.035819 |Median :0.23987 |Median : 0.007276 |\n|   |Mean   :2014-10-16 |NA               |Mean   :141.6 |Mean   :156.2 |Mean   :138.2 |Mean   :128.0 |Mean   :145.6 |Mean   :154.0 |Mean   :  1.2792 |Mean   : 1.4486    |Mean   :  1.2393   |Mean   :  0.9463   |Mean   :  1.1859   |Mean   : 1.5301    |Mean   : 95.15 |Mean   : 821.7 |Mean   :20.05 |Mean   :25.02  |Mean   :101.87   |Mean   : 0.4298 |Mean   :  0.6331  |Mean   :  1.0694 |Mean   :  2.1542        |Mean   :  0.9889          |Mean   :3000 |Mean   :  0.8111 |Mean   :1.2597 |Mean   :1.2811 |Mean   :1.6769 |Mean   :2.2965 |Mean   : 0.02373 |Mean   : 0.01914 |Mean   : 0.008438 |Mean   : 0.003687 |Mean   :0.91064 |Mean   : 0.024368 |\n|   |3rd Qu.:2019-05-09 |NA               |3rd Qu.:152.8 |3rd Qu.:175.4 |3rd Qu.:148.1 |3rd Qu.:137.9 |3rd Qu.:154.1 |3rd Qu.:171.5 |3rd Qu.:  2.7872 |3rd Qu.: 3.6142    |3rd Qu.:  2.4387   |3rd Qu.:  2.2673   |3rd Qu.:  2.5677   |3rd Qu.: 2.1980    |3rd Qu.:101.22 |3rd Qu.: 916.2 |3rd Qu.:21.50 |3rd Qu.:28.06  |3rd Qu.:111.22   |3rd Qu.: 1.8847 |3rd Qu.:  4.5361  |3rd Qu.:  3.5446 |3rd Qu.:  3.4565        |3rd Qu.:  1.2220          |3rd Qu.:3240 |3rd Qu.:  4.1286 |3rd Qu.:1.9434 |3rd Qu.:1.9508 |3rd Qu.:2.2000 |3rd Qu.:2.7364 |3rd Qu.: 0.11291 |3rd Qu.: 0.12024 |3rd Qu.: 0.164240 |3rd Qu.: 0.205671 |3rd Qu.:1.48863 |3rd Qu.: 0.096097 |\n|   |Max.   :2023-12-01 |NA               |Max.   :201.5 |Max.   :233.2 |Max.   :194.2 |Max.   :148.1 |Max.   :213.9 |Max.   :248.1 |Max.   : 15.7398 |Max.   :14.9003    |Max.   : 15.9496   |Max.   : 15.1899   |Max.   : 18.5146   |Max.   :16.0696    |Max.   :125.91 |Max.   :1626.9 |Max.   :41.82 |Max.   :57.45  |Max.   :168.80   |Max.   :13.9593 |Max.   : 32.9525  |Max.   :101.2698 |Max.   :115.1042        |Max.   : 61.3151          |Max.   :3600 |Max.   : 27.1185 |Max.   :3.9295 |Max.   :3.5476 |Max.   :3.2817 |Max.   :3.5053 |Max.   : 1.13440 |Max.   : 0.95915 |Max.   : 0.881261 |Max.   : 0.818961 |Max.   :3.67181 |Max.   : 1.269015 |\n|   |NA                 |NA               |NA            |NA            |NA            |NA            |NA            |NA            |NA               |NA                 |NA                 |NA                 |NA                 |NA                 |NA             |NA             |NA            |NA             |NA               |NA              |NA                |NA               |NA                      |NA                        |NA           |NA               |NA             |NA             |NA             |NA             |NA               |NA               |NA                |NA                |NA              |NA's   :1         |\n:::\n:::\n\n\n#### Monthly\n\nThe code chunk shows a sample of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable(head(data_by_month, 5))\n```\n\n::: {.cell-output-display}\n|Date       |MonthLabel | Cement| SteelBar| Granite| ConcretingSand| ReadyMixConcrete| PCChange_Cement| PCChange_SteelBar| PCChange_Granite| PCChange_ConcretingSand| PCChange_ReadyMixConcrete|    Index| PCChange_Index|  Bill1Yr|  Bond2Yr|  Bond5Yr| Bond10Yr| Change_Bill1Yr| Change_Bond2Yr| Change_Bond5Yr| Change_Bond10Yr|     Rate| Change_Rate|\n|:----------|:----------|------:|--------:|-------:|--------------:|----------------:|---------------:|-----------------:|----------------:|-----------------------:|-------------------------:|--------:|--------------:|--------:|--------:|--------:|--------:|--------------:|--------------:|--------------:|---------------:|--------:|-----------:|\n|2005-07-01 |7M2005     |  85.33|   717.50|    17.3|          12.09|            72.48|       0.0000000|        -1.7970792|         5.616606|               2.1114865|                 0.3739094| 2270.400|      3.0120877| 1.921905| 1.971429| 2.270952| 2.671429|     -0.0903680|     -0.0349351|      0.0050433|       0.0518831| 1.759686|          NA|\n|2005-08-01 |8M2005     |  85.78|   727.50|    17.3|          12.46|            72.99|       0.5273644|         1.3937282|         0.000000|               3.0603805|                 0.7036424| 2308.880|      1.6948568| 1.922727| 2.041818| 2.345455| 2.773636|      0.0008225|      0.0703896|      0.0745022|       0.1022078| 1.782736|   0.0230506|\n|2005-09-01 |9M2005     |  86.11|   730.00|    16.9|          12.59|            72.99|       0.3847051|         0.3436426|        -2.312139|               1.0433387|                 0.0000000| 2303.061|     -0.2519916| 2.111364| 2.167727| 2.487273| 2.882727|      0.1886364|      0.1259091|      0.1418182|       0.1090909| 2.130377|   0.3476409|\n|2005-10-01 |10M2005    |  86.11|   724.38|    16.7|          12.59|            72.99|       0.0000000|        -0.7698630|        -1.183432|               0.0000000|                 0.0000000| 2273.094|     -1.3012052| 2.240476| 2.304286| 2.658095| 2.928095|      0.1291126|      0.1365584|      0.1708225|       0.0453680| 2.180767|   0.0503894|\n|2005-11-01 |11M2005    |  86.11|   713.13|    16.7|          12.64|            72.99|       0.0000000|        -1.5530523|         0.000000|               0.3971406|                 0.0000000| 2276.015|      0.1285117| 2.651500| 2.665500| 3.075500| 3.238500|      0.4110238|      0.3612143|      0.4174048|       0.3104048| 2.675800|   0.4950333|\n:::\n:::\n\n\nThe code chunk provides a summary of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable(summary(data_by_quarter))\n```\n\n::: {.cell-output-display}\n|   |     Date          |QuarterLabel     |    PR_All    |  PR_Landed   |  PR_NL_ALL   |  PR_NL_CCR   |  PR_NL_RCR   |  PR_NL_OCR   |PCChange_PR_All  |PCChange_PR_Landed |PCChange_PR_NL_ALL |PCChange_PR_NL_CCR |PCChange_PR_NL_RCR |PCChange_PR_NL_OCR |    Cement     |   SteelBar    |   Granite    |ConcretingSand |ReadyMixConcrete |PCChange_Cement |PCChange_SteelBar |PCChange_Granite |PCChange_ConcretingSand |PCChange_ReadyMixConcrete |    Index    |PCChange_Index   |   Bill1Yr     |   Bond2Yr     |   Bond5Yr     |   Bond10Yr    |Change_Bill1Yr   |Change_Bond2Yr   |Change_Bond5Yr    |Change_Bond10Yr   |     Rate       | Change_Rate      |\n|:--|:------------------|:----------------|:-------------|:-------------|:-------------|:-------------|:-------------|:-------------|:----------------|:------------------|:------------------|:------------------|:------------------|:------------------|:--------------|:--------------|:-------------|:--------------|:----------------|:---------------|:-----------------|:----------------|:-----------------------|:-------------------------|:------------|:----------------|:--------------|:--------------|:--------------|:--------------|:----------------|:----------------|:-----------------|:-----------------|:---------------|:-----------------|\n|   |Min.   :2005-09-01 |Length:74        |Min.   : 83.3 |Min.   : 84.8 |Min.   : 83.1 |Min.   : 79.7 |Min.   : 94.1 |Min.   : 83.6 |Min.   :-14.0893 |Min.   :-9.1735    |Min.   :-15.1104   |Min.   :-16.2479   |Min.   :-16.9435   |Min.   :-7.3216    |Min.   : 75.37 |Min.   : 416.2 |Min.   :14.83 |Min.   :12.38  |Min.   : 72.82   |Min.   :-8.2837 |Min.   :-32.9593  |Min.   :-41.6501 |Min.   :-20.8906        |Min.   :-19.4708          |Min.   :1674 |Min.   :-33.7447 |Min.   :0.2477 |Min.   :0.1787 |Min.   :0.3778 |Min.   :0.8854 |Min.   :-0.99239 |Min.   :-0.89210 |Min.   :-0.825660 |Min.   :-0.686901 |Min.   :0.04001 |Min.   :-0.705511 |\n|   |1st Qu.:2010-03-24 |Class :character |1st Qu.:128.1 |1st Qu.:130.4 |1st Qu.:129.4 |1st Qu.:126.6 |1st Qu.:134.4 |1st Qu.:127.5 |1st Qu.: -0.4112 |1st Qu.:-0.8242    |1st Qu.: -0.2894   |1st Qu.: -0.5599   |1st Qu.: -0.5996   |1st Qu.:-0.1181    |1st Qu.: 85.90 |1st Qu.: 717.2 |1st Qu.:17.68 |1st Qu.:21.73  |1st Qu.: 90.61   |1st Qu.:-1.0824 |1st Qu.: -3.6214  |1st Qu.: -3.6486 |1st Qu.: -2.9350        |1st Qu.: -1.5607          |1st Qu.:2839 |1st Qu.: -1.5478 |1st Qu.:0.3574 |1st Qu.:0.4398 |1st Qu.:1.0908 |1st Qu.:1.8475 |1st Qu.:-0.06383 |1st Qu.:-0.07722 |1st Qu.:-0.108647 |1st Qu.:-0.165335 |1st Qu.:0.11305 |1st Qu.:-0.035194 |\n|   |Median :2014-10-16 |Mode  :character |Median :146.2 |Median :164.3 |Median :140.9 |Median :132.7 |Median :147.4 |Median :158.1 |Median :  0.7929 |Median : 0.9589    |Median :  0.7262   |Median :  0.6098   |Median :  0.4096   |Median : 1.0051    |Median : 93.42 |Median : 774.1 |Median :19.45 |Median :23.82  |Median :101.28   |Median : 0.2793 |Median : -1.0407  |Median :  0.1429 |Median : -0.2193        |Median : -0.1701          |Median :3118 |Median :  1.1822 |Median :0.9521 |Median :1.0306 |Median :1.5938 |Median :2.3358 |Median : 0.01834 |Median : 0.01397 |Median :-0.005920 |Median :-0.035819 |Median :0.23987 |Median : 0.007276 |\n|   |Mean   :2014-10-16 |NA               |Mean   :141.6 |Mean   :156.2 |Mean   :138.2 |Mean   :128.0 |Mean   :145.6 |Mean   :154.0 |Mean   :  1.2792 |Mean   : 1.4486    |Mean   :  1.2393   |Mean   :  0.9463   |Mean   :  1.1859   |Mean   : 1.5301    |Mean   : 95.15 |Mean   : 821.7 |Mean   :20.05 |Mean   :25.02  |Mean   :101.87   |Mean   : 0.4298 |Mean   :  0.6331  |Mean   :  1.0694 |Mean   :  2.1542        |Mean   :  0.9889          |Mean   :3000 |Mean   :  0.8111 |Mean   :1.2597 |Mean   :1.2811 |Mean   :1.6769 |Mean   :2.2965 |Mean   : 0.02373 |Mean   : 0.01914 |Mean   : 0.008438 |Mean   : 0.003687 |Mean   :0.91064 |Mean   : 0.024368 |\n|   |3rd Qu.:2019-05-09 |NA               |3rd Qu.:152.8 |3rd Qu.:175.4 |3rd Qu.:148.1 |3rd Qu.:137.9 |3rd Qu.:154.1 |3rd Qu.:171.5 |3rd Qu.:  2.7872 |3rd Qu.: 3.6142    |3rd Qu.:  2.4387   |3rd Qu.:  2.2673   |3rd Qu.:  2.5677   |3rd Qu.: 2.1980    |3rd Qu.:101.22 |3rd Qu.: 916.2 |3rd Qu.:21.50 |3rd Qu.:28.06  |3rd Qu.:111.22   |3rd Qu.: 1.8847 |3rd Qu.:  4.5361  |3rd Qu.:  3.5446 |3rd Qu.:  3.4565        |3rd Qu.:  1.2220          |3rd Qu.:3240 |3rd Qu.:  4.1286 |3rd Qu.:1.9434 |3rd Qu.:1.9508 |3rd Qu.:2.2000 |3rd Qu.:2.7364 |3rd Qu.: 0.11291 |3rd Qu.: 0.12024 |3rd Qu.: 0.164240 |3rd Qu.: 0.205671 |3rd Qu.:1.48863 |3rd Qu.: 0.096097 |\n|   |Max.   :2023-12-01 |NA               |Max.   :201.5 |Max.   :233.2 |Max.   :194.2 |Max.   :148.1 |Max.   :213.9 |Max.   :248.1 |Max.   : 15.7398 |Max.   :14.9003    |Max.   : 15.9496   |Max.   : 15.1899   |Max.   : 18.5146   |Max.   :16.0696    |Max.   :125.91 |Max.   :1626.9 |Max.   :41.82 |Max.   :57.45  |Max.   :168.80   |Max.   :13.9593 |Max.   : 32.9525  |Max.   :101.2698 |Max.   :115.1042        |Max.   : 61.3151          |Max.   :3600 |Max.   : 27.1185 |Max.   :3.9295 |Max.   :3.5476 |Max.   :3.2817 |Max.   :3.5053 |Max.   : 1.13440 |Max.   : 0.95915 |Max.   : 0.881261 |Max.   : 0.818961 |Max.   :3.67181 |Max.   : 1.269015 |\n|   |NA                 |NA               |NA            |NA            |NA            |NA            |NA            |NA            |NA               |NA                 |NA                 |NA                 |NA                 |NA                 |NA             |NA             |NA            |NA             |NA               |NA              |NA                |NA               |NA                      |NA                        |NA           |NA               |NA             |NA             |NA             |NA             |NA               |NA               |NA                |NA                |NA              |NA's   :1         |\n:::\n:::\n\n:::\n\n# 3 Prototyping\n\n## 3.1 Further data wrangling for nowcasting / forecasting\n\nThe following code chunks splits the dataset according to actual values (i.e. actual indices and rates) or derived values (i.e. the change in values over a time period), and also calculates the time-lagged sequence of the dependent variables (i.e. the respective property price indices for overall and specific segments) for up to 4 periods (i.e. 4 quarters or a year).\n\n::: callout-important\n#### Important\n\nThe user of the Shiny App will be **allowed to choose which property price index time series to use** for the prediction, as well as whether to use actual values or derived values for the prediction. The different property price index time series that are available are:\n\n-   Private Residential Property Price Index (Overall) - Variable: PR_All\n-   Private Residential Property Price Index (Landed) - Variable: PR_Landed\n-   Private Residential Property Price Index (Non-Landed) - Variable: PR_NL_ALL\n-   Private Residential Property Price Index (Non-landed, Core Central Region) - Variable: PR_NL_CCR\n-   Private Residential Property Price Index (Non-landed, Rest of Central Region) - Variable: PR_NL_RCR\n-   Private Residential Property Price Index (Non-landed, Outside of Central Region) - Variable: PR_NL_OCR\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# prepare dataset for actual values + lagged values (up to 4 lagged periods per dependent variable)\ndata_quarter_actual <- data_by_quarter %>% \n  select(Date, QuarterLabel, Cement, SteelBar, Granite, ConcretingSand, ReadyMixConcrete, Index, Bill1Yr, Bond2Yr, Bond5Yr, Bond10Yr, Rate, PR_All, PR_Landed, PR_NL_ALL, PR_NL_CCR, PR_NL_RCR, PR_NL_OCR) %>% \n  mutate(PR_All_Lag_1 = lag(PR_All, 1), PR_All_Lag_2 = lag(PR_All, 2), PR_All_Lag_3 = lag(PR_All, 3), PR_All_Lag_4 = lag(PR_All, 4)) %>% \n  mutate(PR_Landed_Lag_1 = lag(PR_Landed, 1), PR_Landed_Lag_2 = lag(PR_Landed, 2), PR_Landed_Lag_3 = lag(PR_Landed, 3), PR_Landed_Lag_4 = lag(PR_Landed, 4)) %>% \n  mutate(PR_NL_ALL_Lag_1 = lag(PR_NL_ALL, 1), PR_NL_ALL_Lag_2 = lag(PR_NL_ALL, 2), PR_NL_ALL_Lag_3 = lag(PR_NL_ALL, 3), PR_NL_ALL_Lag_4 = lag(PR_NL_ALL, 4)) %>% \n  mutate(PR_NL_CCR_Lag_1 = lag(PR_NL_CCR, 1), PR_NL_CCR_Lag_2 = lag(PR_NL_CCR, 2), PR_NL_CCR_Lag_3 = lag(PR_NL_CCR, 3), PR_NL_CCR_Lag_4 = lag(PR_NL_CCR, 4)) %>% \n  mutate(PR_NL_RCR_Lag_1 = lag(PR_NL_RCR, 1), PR_NL_RCR_Lag_2 = lag(PR_NL_RCR, 2), PR_NL_RCR_Lag_3 = lag(PR_NL_RCR, 3), PR_NL_RCR_Lag_4 = lag(PR_NL_RCR, 4)) %>% \n  mutate(PR_NL_OCR_Lag_1 = lag(PR_NL_OCR, 1), PR_NL_OCR_Lag_2 = lag(PR_NL_OCR, 2), PR_NL_OCR_Lag_3 = lag(PR_NL_OCR, 3), PR_NL_OCR_Lag_4 = lag(PR_NL_OCR, 4))\n  \n\ndata_quarter_diff <- data_by_quarter %>% \n  select(Date, QuarterLabel, PCChange_Cement, PCChange_SteelBar, PCChange_Granite, PCChange_ConcretingSand, PCChange_ReadyMixConcrete, PCChange_Index, Change_Bill1Yr, Change_Bond2Yr, Change_Bond5Yr, Change_Bond10Yr, Change_Rate, PCChange_PR_All, PCChange_PR_Landed, PCChange_PR_NL_ALL, PCChange_PR_NL_CCR, PCChange_PR_NL_RCR, PCChange_PR_NL_OCR) %>% \n  setNames(c(\"Date\", \"QuarterLabel\", \"Cement\", \"SteelBar\", \"Granite\", \"ConcretingSand\", \"ReadyMixConcrete\", \"Index\", \"Bill1Yr\", \"Bond2Yr\", \"Bond5Yr\", \"Bond10Yr\", \"Rate\", \"PR_All\", \"PR_Landed\", \"PR_NL_ALL\", \"PR_NL_CCR\", \"PR_NL_RCR\", \"PR_NL_OCR\")) %>% \n  mutate(PR_All_Lag_1 = lag(PR_All, 1), PR_All_Lag_2 = lag(PR_All, 2), PR_All_Lag_3 = lag(PR_All, 3), PR_All_Lag_4 = lag(PR_All, 4)) %>% \n  mutate(PR_Landed_Lag_1 = lag(PR_Landed, 1), PR_Landed_Lag_2 = lag(PR_Landed, 2), PR_Landed_Lag_3 = lag(PR_Landed, 3), PR_Landed_Lag_4 = lag(PR_Landed, 4)) %>% \n  mutate(PR_NL_ALL_Lag_1 = lag(PR_NL_ALL, 1), PR_NL_ALL_Lag_2 = lag(PR_NL_ALL, 2), PR_NL_ALL_Lag_3 = lag(PR_NL_ALL, 3), PR_NL_ALL_Lag_4 = lag(PR_NL_ALL, 4)) %>% \n  mutate(PR_NL_CCR_Lag_1 = lag(PR_NL_CCR, 1), PR_NL_CCR_Lag_2 = lag(PR_NL_CCR, 2), PR_NL_CCR_Lag_3 = lag(PR_NL_CCR, 3), PR_NL_CCR_Lag_4 = lag(PR_NL_CCR, 4)) %>% \n  mutate(PR_NL_RCR_Lag_1 = lag(PR_NL_RCR, 1), PR_NL_RCR_Lag_2 = lag(PR_NL_RCR, 2), PR_NL_RCR_Lag_3 = lag(PR_NL_RCR, 3), PR_NL_RCR_Lag_4 = lag(PR_NL_RCR, 4)) %>% \n  mutate(PR_NL_OCR_Lag_1 = lag(PR_NL_OCR, 1), PR_NL_OCR_Lag_2 = lag(PR_NL_OCR, 2), PR_NL_OCR_Lag_3 = lag(PR_NL_OCR, 3), PR_NL_OCR_Lag_4 = lag(PR_NL_OCR, 4))\n```\n:::\n\n\nThe code chunk below shows the function used to compute index values when percentage change in property price index value is predicted.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nrecover_actual <- function(predict_diff, start) {\n  index = start\n  for (i in 1:nrow(predict_diff)) {\n    index = (1 + predict_diff$Predicted[i]/100) * index\n    predict_diff$Predicted[i] = index\n  }\n  return(predict_diff)\n}\n```\n:::\n\n\n::: callout-note\n#### Note\n\nFunctions is a useful way of abstracting portions of similar code functionality that are used by different models.\n:::\n\n## 3.2 Prototype of Random Forest model\n\nThe prototype uses **randomForest()** of the randomForest package to model the property price index using explanatory variable for forecasting, to make predictions on the subsequent periods based on new / unseen data.\n\n::: callout-important\n#### Parameters for user inputs\n\nThe following will be made available as user inputs:\n\n-   Variables selection\n    -   Type of data to use for prediction - Select from possible values of 'actual' or 'diff.\n    -   Forecast from which year - Select from possible values of 2018 to 2022\n    -   Explanatory variables - Select from list of explanatory variables (raw material prices, STI, Bond/bill rates, SORA rate)\n    -   Which property price index to forecast - Select from a list of property price indices (refer to 3.1 for list)\n-   Model parameters\n    -   Number of trees (mtree) - Select from possible values of 100 to 500\n    -   Number of variables sampled for each tree (mtry) - Select from possible values of 2 to 8\n    -   Maximal size of terminal nodes in each tree (nodesize) - Select from possible values of 1 to 8\n:::\n\nThe code chunk below simulates the user inputs from the Shiny App:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# set random seed to get consistent result\nset.seed(123)\n\n# choose whether to model actual values or difference across periods ('actual' or 'diff)\ndata_selected = data_quarter_diff\nselected = \"diff\"\n# this is cutoff value of year for testing data selection                    \ncut_off_year = 2020\n# to do if/case statement in Shiny for switching between different time series\ndata_selected <- data_selected %>% \n  rename(dependentVariable = PR_All)\ndata_actual_temp <- data_quarter_actual %>% \n  rename(dependentVariable = PR_All) %>% \n  select(Date, dependentVariable)\n\n# to store explanatory variables - will be user inputs\nexplanatory <- c(\"Cement\", \"SteelBar\", \"Granite\", \"ConcretingSand\", \"ReadyMixConcrete\", \"Index\", \"Bill1Yr\", \"Bond2Yr\", \"Bond5Yr\", \"Bond10Yr\", \"Rate\", 'PR_All_Lag_1', 'PR_All_Lag_2', 'PR_All_Lag_3', 'PR_All_Lag_4')\n# to store dependent variable to model\ndependent <- c(\"PR_All\")\n# variable for number of trees - user input (values from 100 - 500)\nntree <- 300\n# number of variables sampled for tree (values from 2 - 8)\nmtry <- 6\n# maximal size of terminal nodes in each tree (values from 1 - 8)\nnodesize <- 6\n```\n:::\n\n\nThe code chunk below shows the preparation of the dataset based on user selected inputs, including the partitioning of the dataset into training and testing datasets based on the user selected year to start forecasting from.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# preparing the dataset based on user selected variables\nppi_rf_train <- subset(data_selected, as.numeric(year(Date)) < cut_off_year) %>% \n  select(-Date, -QuarterLabel) %>%\n  select(all_of(explanatory), dependentVariable) %>% \n  na.omit()\nppi_rf_test <- subset(data_selected, as.numeric(year(Date)) >= cut_off_year) %>% \n  select(-Date, -QuarterLabel) %>% \n  select(all_of(explanatory), dependentVariable)\n```\n:::\n\n\nThe code chunk below uses **randomForest()** to create the model using the training dataset with the user selected model parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# specifying the model based on user selected variables for the model\nrf_model <- randomForest(dependentVariable ~ ., data = ppi_rf_train, ntree = ntree, mtry = mtry, nodesize = nodesize, importance = T, na.action = na.omit)  \n```\n:::\n\n\nThe following code chunks uses the trained model for predictions on the test data, and the results are shown as ggploty plots. The result plots provided are:\n\n-   Tab 1:\n    -   Predicted vs actual values\n    -   Residuals\n-   Tab 2\n    -   Variable importance\n-   Tab 3:\n    -   Predicted time series\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# using trained model to predict both training and test dataset and calculate RMSE\npredictions_train <- predict(rf_model, newdata = ppi_rf_train)\nrmse_train <- sqrt(mean((ppi_rf_train$dependentVariable - predictions_train)^2))\nmae_train <- mean(abs(ppi_rf_train$dependentVariable - predictions_train))\n\npredictions <- predict(rf_model, newdata = ppi_rf_test)\nrmse_test <- sqrt(mean((ppi_rf_test$dependentVariable - predictions)^2))\nmae_test <- mean(abs(ppi_rf_test$dependentVariable - predictions))\n\nprintout <- data.frame(\n  Error = c('RMSE', 'MAE'),\n  Train = c(rmse_train, mae_train),\n  Test = c(rmse_test, mae_test))\n\n# Tab 1 - plot actual vs predicted\nresults <- data.frame(Actual = ppi_rf_test$dependentVariable, Predicted = predictions, \"DataPartition\" = \"Test\")\ntrain_test <- data.frame(Actual = ppi_rf_train$dependentVariable, Predicted = predictions_train, \"DataPartition\" = \"Train\") %>% \n  bind_rows(results)\nx_lim_min <- floor(train_test['Actual'] %>% min())\ny_lim_min <- floor(train_test['Predicted'] %>% min())\nx_lim_max <- ceiling(train_test['Actual'] %>% max())\ny_lim_max <- ceiling(train_test['Predicted'] %>% max())\n\np1a <- ggplot(data = train_test, \n             aes(x = Actual, \n                 y = Predicted, \n                 color = DataPartition)) +\n  geom_abline(intercept = 0, slope = 1, color = \"red\", linetype = \"dashed\") +  # Add a diagonal line for reference\n  geom_point(alpha = 0.5) +\n  labs(x = \"Actual\", \n       y = \"Predicted\", \n       title = \"Actual vs. Predicted Values\") + \n  scale_x_continuous(limits = c(min(x_lim_min, y_lim_min), max(x_lim_max, y_lim_max))) +\n  scale_y_continuous(limits = c(min(x_lim_min, y_lim_min), max(x_lim_max, y_lim_max))) +\n  theme_bw()\n\n# Tab 1 - to plot residuals\ntrain_test$Residuals <- train_test$Actual - train_test$Predicted\np1b <- ggplot(data=train_test, aes(x=Predicted, y=Residuals, colour = DataPartition)) + \n  geom_point() +\n  geom_hline(yintercept=0, color = 'Red', linetype = 'dashed') +\n  labs(title = \"Residual Plot\") +\n  theme_bw()\n\n# Tab 3 - to plot time series of index (with forecasting)\n\nif (selected == \"diff\") {\n  results <- recover_actual(results, data_actual_temp$dependentVariable[nrow(data_actual_temp) - nrow(results)])\n}\n \nresults <- results %>% \n  mutate(Date = (data_actual_temp$Date[(nrow(data_actual_temp) - nrow(results) + 1) : (nrow(data_actual_temp))]))\n \np1c <- ggplot() +\n  geom_line(data=data_actual_temp,\n            aes(x = Date, y = dependentVariable),\n            colour = \"green\",\n            size = 0.7) +\n  geom_line(data=results,\n            aes(x=Date, y = Predicted, color = DataPartition),\n            linetype = 'dotted',\n            size = 0.7) +\n  labs(y = \"Price Index\",\n       x = 'Year',\n       title = \"Time Series of Quarterly Price Index (Actual index in green)\") +\n  theme_bw()\n```\n:::\n\n\nThe prototype plots are:\n\n::: panel-tabset\n#### Tab 1 - Prediction results using model\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p1a) \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-6f03232d4fcc1d4440a5\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6f03232d4fcc1d4440a5\">{\"x\":{\"data\":[{\"x\":[-16.550000000000001,17.550000000000001],\"y\":[-16.550000000000001,17.550000000000001],\"text\":\"intercept: 0<br />slope: 1\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-0.9765625,0.32873109796186722,0.78636959370905446,2.080624187256169,3.3121019108280185,0.80147965474723271,1.1009174311926675,5.0211736237144482,0.69124423963134629,3.4897025171624678,3.8142620232172497,0.42598509052182265,3.2873806998939643,-0.2053388090349105,0.82304526748970908,2.806122448979592],\"y\":[0.55858919160525911,-1.237175698879003,-0.44810852255107486,0.70511749203444485,1.680807537034702,2.5528022565580741,1.9264416080798086,1.2708560428629128,4.0753172312768235,2.6152771746635208,1.2654380586338136,1.456818609514567,0.19614499753393239,1.0165908959467298,-0.35559792459986278,0.70705409166719091],\"text\":[\"Actual:  -0.97656250<br />Predicted:  0.55858919<br />DataPartition: Test\",\"Actual:   0.32873110<br />Predicted: -1.23717570<br />DataPartition: Test\",\"Actual:   0.78636959<br />Predicted: -0.44810852<br />DataPartition: Test\",\"Actual:   2.08062419<br />Predicted:  0.70511749<br />DataPartition: Test\",\"Actual:   3.31210191<br />Predicted:  1.68080754<br />DataPartition: Test\",\"Actual:   0.80147965<br />Predicted:  2.55280226<br />DataPartition: Test\",\"Actual:   1.10091743<br />Predicted:  1.92644161<br />DataPartition: Test\",\"Actual:   5.02117362<br />Predicted:  1.27085604<br />DataPartition: Test\",\"Actual:   0.69124424<br />Predicted:  4.07531723<br />DataPartition: Test\",\"Actual:   3.48970252<br />Predicted:  2.61527717<br />DataPartition: Test\",\"Actual:   3.81426202<br />Predicted:  1.26543806<br />DataPartition: Test\",\"Actual:   0.42598509<br />Predicted:  1.45681861<br />DataPartition: Test\",\"Actual:   3.28738070<br />Predicted:  0.19614500<br />DataPartition: Test\",\"Actual:  -0.20533881<br />Predicted:  1.01659090<br />DataPartition: Test\",\"Actual:   0.82304527<br />Predicted: -0.35559792<br />DataPartition: Test\",\"Actual:   2.80612245<br />Predicted:  0.70705409<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.6345933562428376,3.90625,4.8335123523093451,8.1967213114754109,8.3333333333333446,6.7307692307692211,3.7674037674037741,0.1578531965272319,-2.3640661938534278,-6.053268765133172,-14.089347079037806,-4.7000000000000028,15.739769150052465,7.343608340888494,5.6587837837837736,5.2757793764987966,2.8853454821564251,2.7306273062730542,2.2270114942528898,1.9676739283204374,1.3094417643004863,0.27210884353741888,-0.13568521031208755,0.47554347826088122,0.60851926977688009,1.8145161290322502,0.59405940594059781,1.0498687664041957,0.38961038961038591,-0.90556274256145264,-1.2402088772845805,-1.0575016523463467,-0.7348029392117531,-1.0767160161507365,-1.0204081632653061,-0.89347079037801458,-1.3176144244105252,-0.4919184820801244,-0.70621468926553677,-0.42674253200568585,-1.499999999999996,-0.50761421319798194,-0.3644314868804665,-0.07315288953913264,0.7320644216691069,0.79941860465115866,3.8932948810382166,3.4004163775156178,0.46979865771811313,-0.066800267201065008,-0.66844919786096257,1.4804845222072793,1.3262599469496019,0.52356020942407266],\"y\":[2.0227573940870189,3.2724226753524661,4.4589959955138019,5.4679276622016681,6.9896719498583657,5.854654421212568,3.150768187698866,1.751105890726028,-1.2409734118669724,-5.6037101126745164,-7.0837050327557627,-3.379326928879169,7.9986152878294163,6.1904860889043967,6.2299288319507218,5.2401130711912511,3.2117124260955645,2.8427338288711392,2.1772065948692747,1.7858704148712574,0.59113546996591249,0.63025851473043548,0.03470230406897603,0.4643046833301106,0.49353980332863934,1.3085421607539351,0.70770479615201243,0.78591449691614768,0.48655085134773185,-0.35889804497444489,-0.41921393366553378,-0.84756934421880881,-0.7847300051372883,-0.91795380168899288,-0.7301513344611692,-0.98641290550916405,-1.3190069433704492,-0.90532966391409786,-0.70384339913443073,-0.28769500891967675,-0.98905970938485532,-0.39822573637650455,-0.35516765751112395,-0.018796203208646278,0.32440439330742793,1.1282200130174034,2.4597487430822351,3.0896973209454428,1.2824190336264445,0.4677901293737774,-0.017081938665930475,0.89356711429514157,1.0437737809318903,0.94517227597529374],\"text\":[\"Actual:   2.63459336<br />Predicted:  2.02275739<br />DataPartition: Train\",\"Actual:   3.90625000<br />Predicted:  3.27242268<br />DataPartition: Train\",\"Actual:   4.83351235<br />Predicted:  4.45899600<br />DataPartition: Train\",\"Actual:   8.19672131<br />Predicted:  5.46792766<br />DataPartition: Train\",\"Actual:   8.33333333<br />Predicted:  6.98967195<br />DataPartition: Train\",\"Actual:   6.73076923<br />Predicted:  5.85465442<br />DataPartition: Train\",\"Actual:   3.76740377<br />Predicted:  3.15076819<br />DataPartition: Train\",\"Actual:   0.15785320<br />Predicted:  1.75110589<br />DataPartition: Train\",\"Actual:  -2.36406619<br />Predicted: -1.24097341<br />DataPartition: Train\",\"Actual:  -6.05326877<br />Predicted: -5.60371011<br />DataPartition: Train\",\"Actual: -14.08934708<br />Predicted: -7.08370503<br />DataPartition: Train\",\"Actual:  -4.70000000<br />Predicted: -3.37932693<br />DataPartition: Train\",\"Actual:  15.73976915<br />Predicted:  7.99861529<br />DataPartition: Train\",\"Actual:   7.34360834<br />Predicted:  6.19048609<br />DataPartition: Train\",\"Actual:   5.65878378<br />Predicted:  6.22992883<br />DataPartition: Train\",\"Actual:   5.27577938<br />Predicted:  5.24011307<br />DataPartition: Train\",\"Actual:   2.88534548<br />Predicted:  3.21171243<br />DataPartition: Train\",\"Actual:   2.73062731<br />Predicted:  2.84273383<br />DataPartition: Train\",\"Actual:   2.22701149<br />Predicted:  2.17720659<br />DataPartition: Train\",\"Actual:   1.96767393<br />Predicted:  1.78587041<br />DataPartition: Train\",\"Actual:   1.30944176<br />Predicted:  0.59113547<br />DataPartition: Train\",\"Actual:   0.27210884<br />Predicted:  0.63025851<br />DataPartition: Train\",\"Actual:  -0.13568521<br />Predicted:  0.03470230<br />DataPartition: Train\",\"Actual:   0.47554348<br />Predicted:  0.46430468<br />DataPartition: Train\",\"Actual:   0.60851927<br />Predicted:  0.49353980<br />DataPartition: Train\",\"Actual:   1.81451613<br />Predicted:  1.30854216<br />DataPartition: Train\",\"Actual:   0.59405941<br />Predicted:  0.70770480<br />DataPartition: Train\",\"Actual:   1.04986877<br />Predicted:  0.78591450<br />DataPartition: Train\",\"Actual:   0.38961039<br />Predicted:  0.48655085<br />DataPartition: Train\",\"Actual:  -0.90556274<br />Predicted: -0.35889804<br />DataPartition: Train\",\"Actual:  -1.24020888<br />Predicted: -0.41921393<br />DataPartition: Train\",\"Actual:  -1.05750165<br />Predicted: -0.84756934<br />DataPartition: Train\",\"Actual:  -0.73480294<br />Predicted: -0.78473001<br />DataPartition: Train\",\"Actual:  -1.07671602<br />Predicted: -0.91795380<br />DataPartition: Train\",\"Actual:  -1.02040816<br />Predicted: -0.73015133<br />DataPartition: Train\",\"Actual:  -0.89347079<br />Predicted: -0.98641291<br />DataPartition: Train\",\"Actual:  -1.31761442<br />Predicted: -1.31900694<br />DataPartition: Train\",\"Actual:  -0.49191848<br />Predicted: -0.90532966<br />DataPartition: Train\",\"Actual:  -0.70621469<br />Predicted: -0.70384340<br />DataPartition: Train\",\"Actual:  -0.42674253<br />Predicted: -0.28769501<br />DataPartition: Train\",\"Actual:  -1.50000000<br />Predicted: -0.98905971<br />DataPartition: Train\",\"Actual:  -0.50761421<br />Predicted: -0.39822574<br />DataPartition: Train\",\"Actual:  -0.36443149<br />Predicted: -0.35516766<br />DataPartition: Train\",\"Actual:  -0.07315289<br />Predicted: -0.01879620<br />DataPartition: Train\",\"Actual:   0.73206442<br />Predicted:  0.32440439<br />DataPartition: Train\",\"Actual:   0.79941860<br />Predicted:  1.12822001<br />DataPartition: Train\",\"Actual:   3.89329488<br />Predicted:  2.45974874<br />DataPartition: Train\",\"Actual:   3.40041638<br />Predicted:  3.08969732<br />DataPartition: Train\",\"Actual:   0.46979866<br />Predicted:  1.28241903<br />DataPartition: Train\",\"Actual:  -0.06680027<br />Predicted:  0.46779013<br />DataPartition: Train\",\"Actual:  -0.66844920<br />Predicted: -0.01708194<br />DataPartition: Train\",\"Actual:   1.48048452<br />Predicted:  0.89356711<br />DataPartition: Train\",\"Actual:   1.32625995<br />Predicted:  1.04377378<br />DataPartition: Train\",\"Actual:   0.52356021<br />Predicted:  0.94517228<br />DataPartition: Train\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Train\",\"legendgroup\":\"Train\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Actual vs. Predicted Values\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-16.550000000000001,17.550000000000001],\"tickmode\":\"array\",\"ticktext\":[\"-10\",\"0\",\"10\"],\"tickvals\":[-10,0,10],\"categoryorder\":\"array\",\"categoryarray\":[\"-10\",\"0\",\"10\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Actual\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-16.550000000000001,17.550000000000001],\"tickmode\":\"array\",\"ticktext\":[\"-10\",\"0\",\"10\"],\"tickvals\":[-10,0,10],\"categoryorder\":\"array\",\"categoryarray\":[\"-10\",\"0\",\"10\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Predicted\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5070528823f9\":{\"intercept\":{},\"slope\":{},\"type\":\"scatter\"},\"507022d46d2b\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"5070528823f9\",\"visdat\":{\"5070528823f9\":[\"function (y) \",\"x\"],\"507022d46d2b\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p1b)  \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-7ac5914ba519924d168b\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7ac5914ba519924d168b\">{\"x\":{\"data\":[{\"x\":[0.55858919160525911,-1.237175698879003,-0.44810852255107486,0.70511749203444485,1.680807537034702,2.5528022565580741,1.9264416080798086,1.2708560428629128,4.0753172312768235,2.6152771746635208,1.2654380586338136,1.456818609514567,0.19614499753393239,1.0165908959467298,-0.35559792459986278,0.70705409166719091],\"y\":[-1.5351516916052592,1.5659067968408702,1.2344781162601293,1.3755066952217243,1.6312943737933165,-1.7513226018108414,-0.82552417688714108,3.7503175808515357,-3.3840729916454775,0.87442534249894699,2.5488239645834359,-1.0308335189927442,3.0912357023600321,-1.2219297049816402,1.1786431920895719,2.0990683573124009],\"text\":[\"Predicted:  0.55858919<br />Residuals: -1.535151692<br />DataPartition: Test\",\"Predicted: -1.23717570<br />Residuals:  1.565906797<br />DataPartition: Test\",\"Predicted: -0.44810852<br />Residuals:  1.234478116<br />DataPartition: Test\",\"Predicted:  0.70511749<br />Residuals:  1.375506695<br />DataPartition: Test\",\"Predicted:  1.68080754<br />Residuals:  1.631294374<br />DataPartition: Test\",\"Predicted:  2.55280226<br />Residuals: -1.751322602<br />DataPartition: Test\",\"Predicted:  1.92644161<br />Residuals: -0.825524177<br />DataPartition: Test\",\"Predicted:  1.27085604<br />Residuals:  3.750317581<br />DataPartition: Test\",\"Predicted:  4.07531723<br />Residuals: -3.384072992<br />DataPartition: Test\",\"Predicted:  2.61527717<br />Residuals:  0.874425342<br />DataPartition: Test\",\"Predicted:  1.26543806<br />Residuals:  2.548823965<br />DataPartition: Test\",\"Predicted:  1.45681861<br />Residuals: -1.030833519<br />DataPartition: Test\",\"Predicted:  0.19614500<br />Residuals:  3.091235702<br />DataPartition: Test\",\"Predicted:  1.01659090<br />Residuals: -1.221929705<br />DataPartition: Test\",\"Predicted: -0.35559792<br />Residuals:  1.178643192<br />DataPartition: Test\",\"Predicted:  0.70705409<br />Residuals:  2.099068357<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.0227573940870189,3.2724226753524661,4.4589959955138019,5.4679276622016681,6.9896719498583657,5.854654421212568,3.150768187698866,1.751105890726028,-1.2409734118669724,-5.6037101126745164,-7.0837050327557627,-3.379326928879169,7.9986152878294163,6.1904860889043967,6.2299288319507218,5.2401130711912511,3.2117124260955645,2.8427338288711392,2.1772065948692747,1.7858704148712574,0.59113546996591249,0.63025851473043548,0.03470230406897603,0.4643046833301106,0.49353980332863934,1.3085421607539351,0.70770479615201243,0.78591449691614768,0.48655085134773185,-0.35889804497444489,-0.41921393366553378,-0.84756934421880881,-0.7847300051372883,-0.91795380168899288,-0.7301513344611692,-0.98641290550916405,-1.3190069433704492,-0.90532966391409786,-0.70384339913443073,-0.28769500891967675,-0.98905970938485532,-0.39822573637650455,-0.35516765751112395,-0.018796203208646278,0.32440439330742793,1.1282200130174034,2.4597487430822351,3.0896973209454428,1.2824190336264445,0.4677901293737774,-0.017081938665930475,0.89356711429514157,1.0437737809318903,0.94517227597529374],\"y\":[0.6118359621558187,0.63382732464753389,0.37451635679554318,2.7287936492737428,1.3436613834749789,0.87611480955665311,0.61663557970490812,-1.5932526941987961,-1.1230927819864553,-0.44955865245865567,-7.005642046282043,-1.3206730711208339,7.7411538622230491,1.1531222519840973,-0.57114504816694822,0.035666305307545443,-0.32636694393913945,-0.11210652259808507,0.049804899383615098,0.18180351344918,0.71830629433457382,-0.35814967119301661,-0.17038751438106359,0.011238794930770624,0.11497946644824075,0.50597396827831509,-0.11364539021141462,0.26395426948804801,-0.09694046173734594,-0.54666469758700775,-0.82099494361904668,-0.20993230812753794,0.049927065925535197,-0.15876221446174366,-0.29025682880413695,0.092942115131149472,0.0013925189599239829,0.41341118183397346,-0.0023712901311060408,-0.13904752308600909,-0.51094029061514068,-0.1093884768214774,-0.0092638293693425577,-0.054356686330486362,0.40766002836167897,-0.32880140836624472,1.4335461379559815,0.31071905657017496,-0.81262037590833136,-0.53459039657484242,-0.65136725919503213,0.58691740791213776,0.28248616601771159,-0.42161206655122108],\"text\":[\"Predicted:  2.02275739<br />Residuals:  0.611835962<br />DataPartition: Train\",\"Predicted:  3.27242268<br />Residuals:  0.633827325<br />DataPartition: Train\",\"Predicted:  4.45899600<br />Residuals:  0.374516357<br />DataPartition: Train\",\"Predicted:  5.46792766<br />Residuals:  2.728793649<br />DataPartition: Train\",\"Predicted:  6.98967195<br />Residuals:  1.343661383<br />DataPartition: Train\",\"Predicted:  5.85465442<br />Residuals:  0.876114810<br />DataPartition: Train\",\"Predicted:  3.15076819<br />Residuals:  0.616635580<br />DataPartition: Train\",\"Predicted:  1.75110589<br />Residuals: -1.593252694<br />DataPartition: Train\",\"Predicted: -1.24097341<br />Residuals: -1.123092782<br />DataPartition: Train\",\"Predicted: -5.60371011<br />Residuals: -0.449558652<br />DataPartition: Train\",\"Predicted: -7.08370503<br />Residuals: -7.005642046<br />DataPartition: Train\",\"Predicted: -3.37932693<br />Residuals: -1.320673071<br />DataPartition: Train\",\"Predicted:  7.99861529<br />Residuals:  7.741153862<br />DataPartition: Train\",\"Predicted:  6.19048609<br />Residuals:  1.153122252<br />DataPartition: Train\",\"Predicted:  6.22992883<br />Residuals: -0.571145048<br />DataPartition: Train\",\"Predicted:  5.24011307<br />Residuals:  0.035666305<br />DataPartition: Train\",\"Predicted:  3.21171243<br />Residuals: -0.326366944<br />DataPartition: Train\",\"Predicted:  2.84273383<br />Residuals: -0.112106523<br />DataPartition: Train\",\"Predicted:  2.17720659<br />Residuals:  0.049804899<br />DataPartition: Train\",\"Predicted:  1.78587041<br />Residuals:  0.181803513<br />DataPartition: Train\",\"Predicted:  0.59113547<br />Residuals:  0.718306294<br />DataPartition: Train\",\"Predicted:  0.63025851<br />Residuals: -0.358149671<br />DataPartition: Train\",\"Predicted:  0.03470230<br />Residuals: -0.170387514<br />DataPartition: Train\",\"Predicted:  0.46430468<br />Residuals:  0.011238795<br />DataPartition: Train\",\"Predicted:  0.49353980<br />Residuals:  0.114979466<br />DataPartition: Train\",\"Predicted:  1.30854216<br />Residuals:  0.505973968<br />DataPartition: Train\",\"Predicted:  0.70770480<br />Residuals: -0.113645390<br />DataPartition: Train\",\"Predicted:  0.78591450<br />Residuals:  0.263954269<br />DataPartition: Train\",\"Predicted:  0.48655085<br />Residuals: -0.096940462<br />DataPartition: Train\",\"Predicted: -0.35889804<br />Residuals: -0.546664698<br />DataPartition: Train\",\"Predicted: -0.41921393<br />Residuals: -0.820994944<br />DataPartition: Train\",\"Predicted: -0.84756934<br />Residuals: -0.209932308<br />DataPartition: Train\",\"Predicted: -0.78473001<br />Residuals:  0.049927066<br />DataPartition: Train\",\"Predicted: -0.91795380<br />Residuals: -0.158762214<br />DataPartition: Train\",\"Predicted: -0.73015133<br />Residuals: -0.290256829<br />DataPartition: Train\",\"Predicted: -0.98641291<br />Residuals:  0.092942115<br />DataPartition: Train\",\"Predicted: -1.31900694<br />Residuals:  0.001392519<br />DataPartition: Train\",\"Predicted: -0.90532966<br />Residuals:  0.413411182<br />DataPartition: Train\",\"Predicted: -0.70384340<br />Residuals: -0.002371290<br />DataPartition: Train\",\"Predicted: -0.28769501<br />Residuals: -0.139047523<br />DataPartition: Train\",\"Predicted: -0.98905971<br />Residuals: -0.510940291<br />DataPartition: Train\",\"Predicted: -0.39822574<br />Residuals: -0.109388477<br />DataPartition: Train\",\"Predicted: -0.35516766<br />Residuals: -0.009263829<br />DataPartition: Train\",\"Predicted: -0.01879620<br />Residuals: -0.054356686<br />DataPartition: Train\",\"Predicted:  0.32440439<br />Residuals:  0.407660028<br />DataPartition: Train\",\"Predicted:  1.12822001<br />Residuals: -0.328801408<br />DataPartition: Train\",\"Predicted:  2.45974874<br />Residuals:  1.433546138<br />DataPartition: Train\",\"Predicted:  3.08969732<br />Residuals:  0.310719057<br />DataPartition: Train\",\"Predicted:  1.28241903<br />Residuals: -0.812620376<br />DataPartition: Train\",\"Predicted:  0.46779013<br />Residuals: -0.534590397<br />DataPartition: Train\",\"Predicted: -0.01708194<br />Residuals: -0.651367259<br />DataPartition: Train\",\"Predicted:  0.89356711<br />Residuals:  0.586917408<br />DataPartition: Train\",\"Predicted:  1.04377378<br />Residuals:  0.282486166<br />DataPartition: Train\",\"Predicted:  0.94517228<br />Residuals: -0.421612067<br />DataPartition: Train\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Train\",\"legendgroup\":\"Train\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-7.8378210487850222,8.7527313038586758],\"y\":[0,0],\"text\":\"yintercept: 0\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Residual Plot\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-7.8378210487850222,8.7527313038586758],\"tickmode\":\"array\",\"ticktext\":[\"-4\",\"0\",\"4\",\"8\"],\"tickvals\":[-4,0,4,8],\"categoryorder\":\"array\",\"categoryarray\":[\"-4\",\"0\",\"4\",\"8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Predicted\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-7.742981841707298,8.4784936576483041],\"tickmode\":\"array\",\"ticktext\":[\"-4\",\"0\",\"4\",\"8\"],\"tickvals\":[-4,0,4,8],\"categoryorder\":\"array\",\"categoryarray\":[\"-4\",\"0\",\"4\",\"8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Residuals\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"507046a6268\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"507030e815ec\":{\"yintercept\":{}}},\"cur_data\":\"507046a6268\",\"visdat\":{\"507046a6268\":[\"function (y) \",\"x\"],\"507030e815ec\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable (printout)\n```\n\n::: {.cell-output-display}\n|Error |     Train|     Test|\n|:-----|---------:|--------:|\n|RMSE  | 1.5806412| 2.020507|\n|MAE   | 0.7478208| 1.818658|\n:::\n:::\n\n\n#### Tab 2 - Variable Importance\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nvarImpPlot(rf_model) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex04_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n#### Tab 3 - Predicted time series\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p1c)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-d2e3e2111d7cc720f316\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d2e3e2111d7cc720f316\">{\"x\":{\"data\":[{\"x\":[13027,13118,13208,13300,13392,13483,13573,13665,13757,13848,13939,14031,14123,14214,14304,14396,14488,14579,14669,14761,14853,14944,15034,15126,15218,15309,15400,15492,15584,15675,15765,15857,15949,16040,16130,16222,16314,16405,16495,16587,16679,16770,16861,16953,17045,17136,17226,17318,17410,17501,17591,17683,17775,17866,17956,18048,18140,18231,18322,18414,18506,18597,18687,18779,18871,18962,19052,19144,19236,19327,19417,19509,19601,19692],\"y\":[83.299999999999997,84.5,85.799999999999997,87.299999999999997,89.599999999999994,93.099999999999994,97.599999999999994,105.59999999999999,114.40000000000001,122.09999999999999,126.7,126.90000000000001,123.90000000000001,116.40000000000001,100,95.299999999999997,110.3,118.40000000000001,125.09999999999999,131.69999999999999,135.5,139.19999999999999,142.30000000000001,145.09999999999999,147,147.40000000000001,147.19999999999999,147.90000000000001,148.80000000000001,151.5,152.40000000000001,154,154.59999999999999,153.19999999999999,151.30000000000001,149.69999999999999,148.59999999999999,147,145.5,144.19999999999999,142.30000000000001,141.59999999999999,140.59999999999999,140,137.90000000000001,137.19999999999999,136.69999999999999,136.59999999999999,137.59999999999999,138.69999999999999,144.09999999999999,149,149.69999999999999,149.59999999999999,148.59999999999999,150.80000000000001,152.80000000000001,153.59999999999999,152.09999999999999,152.59999999999999,153.80000000000001,157,162.19999999999999,163.5,165.30000000000001,173.59999999999999,174.80000000000001,180.90000000000001,187.80000000000001,188.59999999999999,194.80000000000001,194.40000000000001,196,201.5],\"text\":[\"Date: 2005-09-01<br />dependentVariable:  83.3\",\"Date: 2005-12-01<br />dependentVariable:  84.5\",\"Date: 2006-03-01<br />dependentVariable:  85.8\",\"Date: 2006-06-01<br />dependentVariable:  87.3\",\"Date: 2006-09-01<br />dependentVariable:  89.6\",\"Date: 2006-12-01<br />dependentVariable:  93.1\",\"Date: 2007-03-01<br />dependentVariable:  97.6\",\"Date: 2007-06-01<br />dependentVariable: 105.6\",\"Date: 2007-09-01<br />dependentVariable: 114.4\",\"Date: 2007-12-01<br />dependentVariable: 122.1\",\"Date: 2008-03-01<br />dependentVariable: 126.7\",\"Date: 2008-06-01<br />dependentVariable: 126.9\",\"Date: 2008-09-01<br />dependentVariable: 123.9\",\"Date: 2008-12-01<br />dependentVariable: 116.4\",\"Date: 2009-03-01<br />dependentVariable: 100.0\",\"Date: 2009-06-01<br />dependentVariable:  95.3\",\"Date: 2009-09-01<br />dependentVariable: 110.3\",\"Date: 2009-12-01<br />dependentVariable: 118.4\",\"Date: 2010-03-01<br />dependentVariable: 125.1\",\"Date: 2010-06-01<br />dependentVariable: 131.7\",\"Date: 2010-09-01<br />dependentVariable: 135.5\",\"Date: 2010-12-01<br />dependentVariable: 139.2\",\"Date: 2011-03-01<br />dependentVariable: 142.3\",\"Date: 2011-06-01<br />dependentVariable: 145.1\",\"Date: 2011-09-01<br />dependentVariable: 147.0\",\"Date: 2011-12-01<br />dependentVariable: 147.4\",\"Date: 2012-03-01<br />dependentVariable: 147.2\",\"Date: 2012-06-01<br />dependentVariable: 147.9\",\"Date: 2012-09-01<br />dependentVariable: 148.8\",\"Date: 2012-12-01<br />dependentVariable: 151.5\",\"Date: 2013-03-01<br />dependentVariable: 152.4\",\"Date: 2013-06-01<br />dependentVariable: 154.0\",\"Date: 2013-09-01<br />dependentVariable: 154.6\",\"Date: 2013-12-01<br />dependentVariable: 153.2\",\"Date: 2014-03-01<br />dependentVariable: 151.3\",\"Date: 2014-06-01<br />dependentVariable: 149.7\",\"Date: 2014-09-01<br />dependentVariable: 148.6\",\"Date: 2014-12-01<br />dependentVariable: 147.0\",\"Date: 2015-03-01<br />dependentVariable: 145.5\",\"Date: 2015-06-01<br />dependentVariable: 144.2\",\"Date: 2015-09-01<br />dependentVariable: 142.3\",\"Date: 2015-12-01<br />dependentVariable: 141.6\",\"Date: 2016-03-01<br />dependentVariable: 140.6\",\"Date: 2016-06-01<br />dependentVariable: 140.0\",\"Date: 2016-09-01<br />dependentVariable: 137.9\",\"Date: 2016-12-01<br />dependentVariable: 137.2\",\"Date: 2017-03-01<br />dependentVariable: 136.7\",\"Date: 2017-06-01<br />dependentVariable: 136.6\",\"Date: 2017-09-01<br />dependentVariable: 137.6\",\"Date: 2017-12-01<br />dependentVariable: 138.7\",\"Date: 2018-03-01<br />dependentVariable: 144.1\",\"Date: 2018-06-01<br />dependentVariable: 149.0\",\"Date: 2018-09-01<br />dependentVariable: 149.7\",\"Date: 2018-12-01<br />dependentVariable: 149.6\",\"Date: 2019-03-01<br />dependentVariable: 148.6\",\"Date: 2019-06-01<br />dependentVariable: 150.8\",\"Date: 2019-09-01<br />dependentVariable: 152.8\",\"Date: 2019-12-01<br />dependentVariable: 153.6\",\"Date: 2020-03-01<br />dependentVariable: 152.1\",\"Date: 2020-06-01<br />dependentVariable: 152.6\",\"Date: 2020-09-01<br />dependentVariable: 153.8\",\"Date: 2020-12-01<br />dependentVariable: 157.0\",\"Date: 2021-03-01<br />dependentVariable: 162.2\",\"Date: 2021-06-01<br />dependentVariable: 163.5\",\"Date: 2021-09-01<br />dependentVariable: 165.3\",\"Date: 2021-12-01<br />dependentVariable: 173.6\",\"Date: 2022-03-01<br />dependentVariable: 174.8\",\"Date: 2022-06-01<br />dependentVariable: 180.9\",\"Date: 2022-09-01<br />dependentVariable: 187.8\",\"Date: 2022-12-01<br />dependentVariable: 188.6\",\"Date: 2023-03-01<br />dependentVariable: 194.8\",\"Date: 2023-06-01<br />dependentVariable: 194.4\",\"Date: 2023-09-01<br />dependentVariable: 196.0\",\"Date: 2023-12-01<br />dependentVariable: 201.5\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.6456692913385824,\"color\":\"rgba(0,255,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[18322,18414,18506,18597,18687,18779,18871,18962,19052,19144,19236,19327,19417,19509,19601,19692],\"y\":[154.45799299830566,152.54707624395439,151.86349979440274,152.93431589546876,155.50484740375225,159.47457865733242,162.5467632948972,164.61249865870849,171.32098018138217,175.80149867147568,178.02615774331315,180.61967593912149,180.97395239803808,182.8137171221515,182.16363533818128,183.45163077536958],\"text\":[\"Date: 2020-03-01<br />Predicted: 154.4580<br />DataPartition: Test\",\"Date: 2020-06-01<br />Predicted: 152.5471<br />DataPartition: Test\",\"Date: 2020-09-01<br />Predicted: 151.8635<br />DataPartition: Test\",\"Date: 2020-12-01<br />Predicted: 152.9343<br />DataPartition: Test\",\"Date: 2021-03-01<br />Predicted: 155.5048<br />DataPartition: Test\",\"Date: 2021-06-01<br />Predicted: 159.4746<br />DataPartition: Test\",\"Date: 2021-09-01<br />Predicted: 162.5468<br />DataPartition: Test\",\"Date: 2021-12-01<br />Predicted: 164.6125<br />DataPartition: Test\",\"Date: 2022-03-01<br />Predicted: 171.3210<br />DataPartition: Test\",\"Date: 2022-06-01<br />Predicted: 175.8015<br />DataPartition: Test\",\"Date: 2022-09-01<br />Predicted: 178.0262<br />DataPartition: Test\",\"Date: 2022-12-01<br />Predicted: 180.6197<br />DataPartition: Test\",\"Date: 2023-03-01<br />Predicted: 180.9740<br />DataPartition: Test\",\"Date: 2023-06-01<br />Predicted: 182.8137<br />DataPartition: Test\",\"Date: 2023-09-01<br />Predicted: 182.1636<br />DataPartition: Test\",\"Date: 2023-12-01<br />Predicted: 183.4516<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.6456692913385824,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"dot\"},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Time Series of Quarterly Price Index (Actual index in green)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[12693.75,20025.25],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"tickvals\":[12784,14610,16436,18262],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[77.390000000000001,207.41],\"tickmode\":\"array\",\"ticktext\":[\"100\",\"125\",\"150\",\"175\",\"200\"],\"tickvals\":[100,125,150,175,200],\"categoryorder\":\"array\",\"categoryarray\":[\"100\",\"125\",\"150\",\"175\",\"200\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Price Index\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"50705ca05fff\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"5070275f5f35\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"50705ca05fff\",\"visdat\":{\"50705ca05fff\":[\"function (y) \",\"x\"],\"5070275f5f35\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n:::\n\n## 3.3 Prototype of Gradient Boost Model\n\nThe prototype uses **gbm()** of the gbm package to model the property price index using explanatory variable for forecasting, to make predictions on the subsequent periods based on new / unseen data.\n\n::: callout-important\n#### Parameters for user inputs\n\nThe following will be made available as user inputs:\n\n-   Variables selection\n    -   Type of data to use for prediction - Select from possible values of 'actual' or 'diff.\n    -   Forecast from which year - Select from possible values of 2018 to 2022\n    -   Explanatory variables - Select from list of explanatory variables (raw material prices, STI, Bond/bill rates, SORA rate)\n    -   Which property price index to forecast - Select from a list of property price indices (refer to 3.1 for list)\n-   Model parameters\n    -   Number of trees (n.trees) - Select from possible values of 100 to 500\n    -   Maximum depth of each tree (interaction.depth) - Select from possible values of 4 to 10\n    -   Learning rate (shrinkage) - Select from possible values of 0.01 to 0.1\n    -   Minimum number of observations in terminal node (n.minobsinnode) - Select from possible values of 5 to 10\n    -   Fraction of observations sampled for each tree (bag.fraction) - Select from possible values of 0.5 to 1.0\n    -   Distribution to use - Select from 'gaussian', 'laplace' or 'tdist' for regression models\n:::\n\nThe code chunk below simulates the user inputs from the Shiny App:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# set random seed to get consistent result\nset.seed(123)\n\n# choose whether to model actual values or difference across periods\ndata_selected <- data_quarter_diff\nselected = \"diff\"\n# this is cutoff value of year for training/testing data selection                \ncut_off_year <- 2020\n# to store explanatory variables - will be user inputs\nexplanatory <- c(\"Cement\", \"SteelBar\", \"Granite\", \"ConcretingSand\", \"ReadyMixConcrete\", \"Index\", \"Bill1Yr\", \"Bond2Yr\", \"Bond5Yr\", \"Bond10Yr\", \"Rate\", 'PR_All_Lag_1', 'PR_All_Lag_2', 'PR_All_Lag_3', 'PR_All_Lag_4')\n# to store dependent variable to model\ndependent <- c(\"PR_All\")\n# to do case stetament in Shiny for switching between different time series\ndata_selected <- data_selected %>% \n  rename(dependentVariable = PR_All)\ndata_actual_temp <- data_quarter_actual %>% \n  rename(dependentVariable = PR_All) %>% \n  select(Date, dependentVariable)\n\n# variable for number of trees (values from 100 to 500)\nn.trees <- 300\n# maximum depth of each tree (values from 4 to 10)\ninteraction.depth <- 4\n# learning rate (values from 0.01 to 0.1)\nshrinkage = 0.01\n# minimum number of observations required in a terminal node (values 5 to 10)\nn.minobsinnode <- 5\n# fraction of observations sampled without replacement for each tree (values 0.5 to 1.0)\nbag.fraction <- 0.5\n# select name of distribution to use (values are 'gaussian', 'laplace', 'tdist')\ndistribution <- 'gaussian'\n```\n:::\n\n\nThe code chunk below shows the preparation of the dataset based on user selected inputs, including the partitioning of the dataset into training and testing datasets based on the user selected year to start forecasting from.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nppi_gb_train <- subset(data_selected, as.numeric(year(Date)) < cut_off_year) %>% \n  select(-Date, -QuarterLabel) %>%\n  select(all_of(explanatory), dependentVariable) %>% \n  na.omit()\n\nppi_gb_test <- subset(data_selected, as.numeric(year(Date)) >= cut_off_year) %>% \n  select(-Date, -QuarterLabel) %>% \n  select(all_of(explanatory), dependentVariable)\n```\n:::\n\n\nThe code chunk below uses **gbm()** to create the model using the training dataset with the user selected model parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\ngb_model <- gbm(dependentVariable ~ ., data = ppi_gb_train, distribution = distribution, n.trees = n.trees, interaction.depth = interaction.depth, shrinkage = shrinkage, n.minobsinnode = n.minobsinnode, bag.fraction = bag.fraction, train.fraction = 1)\n```\n:::\n\n\nThe following code chunks uses the trained model for predictions on the test data, and the results are shown as ggploty plots. The result plots provided are:\n\n-   Tab 1:\n    -   Predicted vs actual values\n    -   Residuals\n-   Tab 2:\n    -   Predicted time series\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# using trained model to predict both training and test dataset and calculate RMSE\npredictions_train <- predict(gb_model, newdata = ppi_gb_train)\nrmse_train <- sqrt(mean((ppi_gb_train$dependentVariable - predictions_train)^2))\nmae_train <- mean(abs(ppi_rf_train$dependentVariable - predictions_train))\n\npredictions <- predict(gb_model, newdata = ppi_gb_test)\nrmse <- sqrt(mean((ppi_gb_test$dependentVariable - predictions)^2))\nmae_test <- mean(abs(ppi_rf_test$dependentVariable - predictions))\n\nprintout <- data.frame(\n  Error = c('RMSE', 'MAE'),\n  Train = c(rmse_train, mae_train),\n  Test = c(rmse_test, mae_test))\n\n# Tab 1 - plot actual vs predicted\nresults <- data.frame(Actual = ppi_gb_test$dependentVariable, Predicted = predictions, \"DataPartition\" = \"Test\")\ntrain_test <- data.frame(Actual = ppi_gb_train$dependentVariable, Predicted = predictions_train, \"DataPartition\" = \"Train\") %>% \n  bind_rows(results)\nx_lim_min <- floor(train_test['Actual'] %>% min())\ny_lim_min <- floor(train_test['Predicted'] %>% min())\nx_lim_max <- ceiling(train_test['Actual'] %>% max())\ny_lim_max <- ceiling(train_test['Predicted'] %>% max())\n\np2a <- ggplot(data = train_test, \n             aes(x = Actual, \n                 y = Predicted, \n                 color = DataPartition)) +\n  geom_abline(intercept = 0, slope = 1, color = \"red\", linetype = \"dashed\") +  # Add a diagonal line for reference\n  geom_point(alpha = 0.5) +\n  labs(x = \"Actual\", \n       y = \"Predicted\", \n       title = \"Actual vs. Predicted Values\") + \n  scale_x_continuous(limits = c(min(x_lim_min, y_lim_min), max(x_lim_max, y_lim_max))) +\n  scale_y_continuous(limits = c(min(x_lim_min, y_lim_min), max(x_lim_max, y_lim_max))) +\n  theme_bw()\n\n\n# Tab 1 - to plot residuals\ntrain_test$Residuals <- train_test$Actual - train_test$Predicted\np2b <- ggplot(data=train_test, aes(x=Predicted, y=Residuals, colour = DataPartition)) + \n  geom_point() +\n  geom_hline(yintercept=0, color = 'Red', linetype = 'dashed') +\n  labs(title = \"Residual Plot\") +\n  theme_bw()\n\n# Tab 2 - to plot time series of index (with forecasting)\n\nif (selected == \"diff\") {\n  results <- recover_actual(results, data_actual_temp$dependentVariable[nrow(data_actual_temp) - nrow(results)]) %>% \n    mutate(Date = (data_actual_temp$Date[(nrow(data_actual_temp) - nrow(results) + 1) : (nrow(data_actual_temp))]))\n}\n\nresults <- results %>% \n  mutate(Date = (data_actual_temp$Date[(nrow(data_actual_temp) - nrow(results) + 1) : (nrow(data_actual_temp))]))\n\np2c <- ggplot() +\n  geom_line(data=data_actual_temp,\n            aes(x = Date, y = dependentVariable),\n            colour = \"green\",\n            size = 0.7) +\n  geom_line(data=results,\n            aes(x=Date, y = Predicted, color = DataPartition),\n            linetype = 'dotted',\n            size = 0.7) +\n  labs(y = \"Price Index\",\n       x = 'Year',\n       title = \"Time Series of Quarterly Price Index (Actual index in green)\") +\n  theme_bw()\n```\n:::\n\n\nThe prototype plots are:\n\n::: panel-tabset\n#### Tab 1 - Prediction results using model\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p2a) \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-67ee08dcf15e2a88f6e4\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-67ee08dcf15e2a88f6e4\">{\"x\":{\"data\":[{\"x\":[-16.550000000000001,17.550000000000001],\"y\":[-16.550000000000001,17.550000000000001],\"text\":\"intercept: 0<br />slope: 1\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-0.9765625,0.32873109796186722,0.78636959370905446,2.080624187256169,3.3121019108280185,0.80147965474723271,1.1009174311926675,5.0211736237144482,0.69124423963134629,3.4897025171624678,3.8142620232172497,0.42598509052182265,3.2873806998939643,-0.2053388090349105,0.82304526748970908,2.806122448979592],\"y\":[-0.3826317836571545,-1.3970801179950572,-0.25177308483998029,1.892500356270632,3.658273275865727,3.368544018301225,2.0051046902222942,1.1194318057852544,4.3967330489507104,2.082531858142759,0.39235407039477321,0.61711218221263542,-0.17735664879147334,1.2885516988479937,-2.1461976416273321,0.14761606159652935],\"text\":[\"Actual:  -0.97656250<br />Predicted: -0.38263178<br />DataPartition: Test\",\"Actual:   0.32873110<br />Predicted: -1.39708012<br />DataPartition: Test\",\"Actual:   0.78636959<br />Predicted: -0.25177308<br />DataPartition: Test\",\"Actual:   2.08062419<br />Predicted:  1.89250036<br />DataPartition: Test\",\"Actual:   3.31210191<br />Predicted:  3.65827328<br />DataPartition: Test\",\"Actual:   0.80147965<br />Predicted:  3.36854402<br />DataPartition: Test\",\"Actual:   1.10091743<br />Predicted:  2.00510469<br />DataPartition: Test\",\"Actual:   5.02117362<br />Predicted:  1.11943181<br />DataPartition: Test\",\"Actual:   0.69124424<br />Predicted:  4.39673305<br />DataPartition: Test\",\"Actual:   3.48970252<br />Predicted:  2.08253186<br />DataPartition: Test\",\"Actual:   3.81426202<br />Predicted:  0.39235407<br />DataPartition: Test\",\"Actual:   0.42598509<br />Predicted:  0.61711218<br />DataPartition: Test\",\"Actual:   3.28738070<br />Predicted: -0.17735665<br />DataPartition: Test\",\"Actual:  -0.20533881<br />Predicted:  1.28855170<br />DataPartition: Test\",\"Actual:   0.82304527<br />Predicted: -2.14619764<br />DataPartition: Test\",\"Actual:   2.80612245<br />Predicted:  0.14761606<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.6345933562428376,3.90625,4.8335123523093451,8.1967213114754109,8.3333333333333446,6.7307692307692211,3.7674037674037741,0.1578531965272319,-2.3640661938534278,-6.053268765133172,-14.089347079037806,-4.7000000000000028,15.739769150052465,7.343608340888494,5.6587837837837736,5.2757793764987966,2.8853454821564251,2.7306273062730542,2.2270114942528898,1.9676739283204374,1.3094417643004863,0.27210884353741888,-0.13568521031208755,0.47554347826088122,0.60851926977688009,1.8145161290322502,0.59405940594059781,1.0498687664041957,0.38961038961038591,-0.90556274256145264,-1.2402088772845805,-1.0575016523463467,-0.7348029392117531,-1.0767160161507365,-1.0204081632653061,-0.89347079037801458,-1.3176144244105252,-0.4919184820801244,-0.70621468926553677,-0.42674253200568585,-1.499999999999996,-0.50761421319798194,-0.3644314868804665,-0.07315288953913264,0.7320644216691069,0.79941860465115866,3.8932948810382166,3.4004163775156178,0.46979865771811313,-0.066800267201065008,-0.66844919786096257,1.4804845222072793,1.3262599469496019,0.52356020942407266],\"y\":[2.1605736274447609,3.8241635566088639,4.9700182013451144,5.9650255771310636,5.6871298802974399,5.2749973950429467,3.1580258203013702,1.8357572663045243,-1.1367040977103033,-5.1650918584533203,-4.4498562881179913,-1.754453338944008,4.29170342400817,6.5306575125203823,5.4130647526794347,5.6838840146399665,2.9847133729853077,2.894238306349016,2.4191934494439318,1.7459976524510827,1.0994876271495875,0.12320646422300585,0.72934966775538679,0.3437724671925616,0.73430920373952269,1.0912666726018212,1.4245642595758179,0.72553743800970427,0.57377953612578847,-0.1872194439266627,-0.68487984595291129,-0.93510955396622253,-1.5613336541854681,-0.70013466480258257,0.035373571101048107,-1.0640821969144934,-1.8786118074668028,-1.3084195484992469,-0.83895008852544684,0.37846642903065941,-1.0888630006415512,-0.57438787300694416,1.0503519548305833,-0.090445352200314105,2.0812874040158524,1.4563699127153433,2.2975924464267181,3.2481039526770896,1.260495125823003,0.066082105354382581,-0.37825397811393058,0.75149260728237177,0.89772326434377736,0.93833474746967682],\"text\":[\"Actual:   2.63459336<br />Predicted:  2.16057363<br />DataPartition: Train\",\"Actual:   3.90625000<br />Predicted:  3.82416356<br />DataPartition: Train\",\"Actual:   4.83351235<br />Predicted:  4.97001820<br />DataPartition: Train\",\"Actual:   8.19672131<br />Predicted:  5.96502558<br />DataPartition: Train\",\"Actual:   8.33333333<br />Predicted:  5.68712988<br />DataPartition: Train\",\"Actual:   6.73076923<br />Predicted:  5.27499740<br />DataPartition: Train\",\"Actual:   3.76740377<br />Predicted:  3.15802582<br />DataPartition: Train\",\"Actual:   0.15785320<br />Predicted:  1.83575727<br />DataPartition: Train\",\"Actual:  -2.36406619<br />Predicted: -1.13670410<br />DataPartition: Train\",\"Actual:  -6.05326877<br />Predicted: -5.16509186<br />DataPartition: Train\",\"Actual: -14.08934708<br />Predicted: -4.44985629<br />DataPartition: Train\",\"Actual:  -4.70000000<br />Predicted: -1.75445334<br />DataPartition: Train\",\"Actual:  15.73976915<br />Predicted:  4.29170342<br />DataPartition: Train\",\"Actual:   7.34360834<br />Predicted:  6.53065751<br />DataPartition: Train\",\"Actual:   5.65878378<br />Predicted:  5.41306475<br />DataPartition: Train\",\"Actual:   5.27577938<br />Predicted:  5.68388401<br />DataPartition: Train\",\"Actual:   2.88534548<br />Predicted:  2.98471337<br />DataPartition: Train\",\"Actual:   2.73062731<br />Predicted:  2.89423831<br />DataPartition: Train\",\"Actual:   2.22701149<br />Predicted:  2.41919345<br />DataPartition: Train\",\"Actual:   1.96767393<br />Predicted:  1.74599765<br />DataPartition: Train\",\"Actual:   1.30944176<br />Predicted:  1.09948763<br />DataPartition: Train\",\"Actual:   0.27210884<br />Predicted:  0.12320646<br />DataPartition: Train\",\"Actual:  -0.13568521<br />Predicted:  0.72934967<br />DataPartition: Train\",\"Actual:   0.47554348<br />Predicted:  0.34377247<br />DataPartition: Train\",\"Actual:   0.60851927<br />Predicted:  0.73430920<br />DataPartition: Train\",\"Actual:   1.81451613<br />Predicted:  1.09126667<br />DataPartition: Train\",\"Actual:   0.59405941<br />Predicted:  1.42456426<br />DataPartition: Train\",\"Actual:   1.04986877<br />Predicted:  0.72553744<br />DataPartition: Train\",\"Actual:   0.38961039<br />Predicted:  0.57377954<br />DataPartition: Train\",\"Actual:  -0.90556274<br />Predicted: -0.18721944<br />DataPartition: Train\",\"Actual:  -1.24020888<br />Predicted: -0.68487985<br />DataPartition: Train\",\"Actual:  -1.05750165<br />Predicted: -0.93510955<br />DataPartition: Train\",\"Actual:  -0.73480294<br />Predicted: -1.56133365<br />DataPartition: Train\",\"Actual:  -1.07671602<br />Predicted: -0.70013466<br />DataPartition: Train\",\"Actual:  -1.02040816<br />Predicted:  0.03537357<br />DataPartition: Train\",\"Actual:  -0.89347079<br />Predicted: -1.06408220<br />DataPartition: Train\",\"Actual:  -1.31761442<br />Predicted: -1.87861181<br />DataPartition: Train\",\"Actual:  -0.49191848<br />Predicted: -1.30841955<br />DataPartition: Train\",\"Actual:  -0.70621469<br />Predicted: -0.83895009<br />DataPartition: Train\",\"Actual:  -0.42674253<br />Predicted:  0.37846643<br />DataPartition: Train\",\"Actual:  -1.50000000<br />Predicted: -1.08886300<br />DataPartition: Train\",\"Actual:  -0.50761421<br />Predicted: -0.57438787<br />DataPartition: Train\",\"Actual:  -0.36443149<br />Predicted:  1.05035195<br />DataPartition: Train\",\"Actual:  -0.07315289<br />Predicted: -0.09044535<br />DataPartition: Train\",\"Actual:   0.73206442<br />Predicted:  2.08128740<br />DataPartition: Train\",\"Actual:   0.79941860<br />Predicted:  1.45636991<br />DataPartition: Train\",\"Actual:   3.89329488<br />Predicted:  2.29759245<br />DataPartition: Train\",\"Actual:   3.40041638<br />Predicted:  3.24810395<br />DataPartition: Train\",\"Actual:   0.46979866<br />Predicted:  1.26049513<br />DataPartition: Train\",\"Actual:  -0.06680027<br />Predicted:  0.06608211<br />DataPartition: Train\",\"Actual:  -0.66844920<br />Predicted: -0.37825398<br />DataPartition: Train\",\"Actual:   1.48048452<br />Predicted:  0.75149261<br />DataPartition: Train\",\"Actual:   1.32625995<br />Predicted:  0.89772326<br />DataPartition: Train\",\"Actual:   0.52356021<br />Predicted:  0.93833475<br />DataPartition: Train\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Train\",\"legendgroup\":\"Train\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Actual vs. Predicted Values\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-16.550000000000001,17.550000000000001],\"tickmode\":\"array\",\"ticktext\":[\"-10\",\"0\",\"10\"],\"tickvals\":[-10,0,10],\"categoryorder\":\"array\",\"categoryarray\":[\"-10\",\"0\",\"10\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Actual\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-16.550000000000001,17.550000000000001],\"tickmode\":\"array\",\"ticktext\":[\"-10\",\"0\",\"10\"],\"tickvals\":[-10,0,10],\"categoryorder\":\"array\",\"categoryarray\":[\"-10\",\"0\",\"10\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Predicted\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"50702b812a3a\":{\"intercept\":{},\"slope\":{},\"type\":\"scatter\"},\"5070584dcb\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"50702b812a3a\",\"visdat\":{\"50702b812a3a\":[\"function (y) \",\"x\"],\"5070584dcb\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p2b)  \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-56bf8363ef5649c0436a\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-56bf8363ef5649c0436a\">{\"x\":{\"data\":[{\"x\":[-0.3826317836571545,-1.3970801179950572,-0.25177308483998029,1.892500356270632,3.658273275865727,3.368544018301225,2.0051046902222942,1.1194318057852544,4.3967330489507104,2.082531858142759,0.39235407039477321,0.61711218221263542,-0.17735664879147334,1.2885516988479937,-2.1461976416273321,0.14761606159652935],\"y\":[-0.59393071634284555,1.7258112159569243,1.0381426785490349,0.18812383098553709,-0.34617136503770851,-2.5670643635539925,-0.90418725902962671,3.9017418179291941,-3.7054888093193643,1.4071706590197088,3.4219079528224765,-0.19112709169081277,3.4647373486854378,-1.4938905078829041,2.9692429091170411,2.6585063873830626],\"text\":[\"Predicted: -0.38263178<br />Residuals: -0.59393072<br />DataPartition: Test\",\"Predicted: -1.39708012<br />Residuals:  1.72581122<br />DataPartition: Test\",\"Predicted: -0.25177308<br />Residuals:  1.03814268<br />DataPartition: Test\",\"Predicted:  1.89250036<br />Residuals:  0.18812383<br />DataPartition: Test\",\"Predicted:  3.65827328<br />Residuals: -0.34617137<br />DataPartition: Test\",\"Predicted:  3.36854402<br />Residuals: -2.56706436<br />DataPartition: Test\",\"Predicted:  2.00510469<br />Residuals: -0.90418726<br />DataPartition: Test\",\"Predicted:  1.11943181<br />Residuals:  3.90174182<br />DataPartition: Test\",\"Predicted:  4.39673305<br />Residuals: -3.70548881<br />DataPartition: Test\",\"Predicted:  2.08253186<br />Residuals:  1.40717066<br />DataPartition: Test\",\"Predicted:  0.39235407<br />Residuals:  3.42190795<br />DataPartition: Test\",\"Predicted:  0.61711218<br />Residuals: -0.19112709<br />DataPartition: Test\",\"Predicted: -0.17735665<br />Residuals:  3.46473735<br />DataPartition: Test\",\"Predicted:  1.28855170<br />Residuals: -1.49389051<br />DataPartition: Test\",\"Predicted: -2.14619764<br />Residuals:  2.96924291<br />DataPartition: Test\",\"Predicted:  0.14761606<br />Residuals:  2.65850639<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.1605736274447609,3.8241635566088639,4.9700182013451144,5.9650255771310636,5.6871298802974399,5.2749973950429467,3.1580258203013702,1.8357572663045243,-1.1367040977103033,-5.1650918584533203,-4.4498562881179913,-1.754453338944008,4.29170342400817,6.5306575125203823,5.4130647526794347,5.6838840146399665,2.9847133729853077,2.894238306349016,2.4191934494439318,1.7459976524510827,1.0994876271495875,0.12320646422300585,0.72934966775538679,0.3437724671925616,0.73430920373952269,1.0912666726018212,1.4245642595758179,0.72553743800970427,0.57377953612578847,-0.1872194439266627,-0.68487984595291129,-0.93510955396622253,-1.5613336541854681,-0.70013466480258257,0.035373571101048107,-1.0640821969144934,-1.8786118074668028,-1.3084195484992469,-0.83895008852544684,0.37846642903065941,-1.0888630006415512,-0.57438787300694416,1.0503519548305833,-0.090445352200314105,2.0812874040158524,1.4563699127153433,2.2975924464267181,3.2481039526770896,1.260495125823003,0.066082105354382581,-0.37825397811393058,0.75149260728237177,0.89772326434377736,0.93833474746967682],\"y\":[0.47401972879807674,0.082086443391136132,-0.13650584903576934,2.2316957343443473,2.6462034530359047,1.4557718357262743,0.60937794710240389,-1.6779040697772925,-1.2273620961431244,-0.88817690667985172,-9.6394907909198153,-2.9455466610559951,11.448065726044295,0.81295082836811172,0.2457190311043389,-0.40810463814116993,-0.099367890828882643,-0.16361100007596185,-0.19218195519104198,0.22167627586935468,0.20995413715089883,0.14890237931441302,-0.86503487806747437,0.13177101106831962,-0.1257899339626426,0.72324945643042904,-0.83050485363522009,0.32433132839449141,-0.18416914651540256,-0.71834329863478996,-0.55532903133166922,-0.12239209838012421,0.826530714973715,-0.37658135134815396,-1.0557817343663543,0.17061140653647877,0.56099738305627755,0.81650106641912257,0.13273539925991007,-0.80520896103634532,-0.41113699935844483,0.066773659808962216,-1.4147834417110499,0.017292462661181465,-1.3492229823467454,-0.65695130806418467,1.5957024346114985,0.15231242483852814,-0.79069646810488992,-0.1328823725554476,-0.290195219747032,0.72899191492490756,0.42853668260582456,-0.41477453804560416],\"text\":[\"Predicted:  2.16057363<br />Residuals:  0.47401973<br />DataPartition: Train\",\"Predicted:  3.82416356<br />Residuals:  0.08208644<br />DataPartition: Train\",\"Predicted:  4.97001820<br />Residuals: -0.13650585<br />DataPartition: Train\",\"Predicted:  5.96502558<br />Residuals:  2.23169573<br />DataPartition: Train\",\"Predicted:  5.68712988<br />Residuals:  2.64620345<br />DataPartition: Train\",\"Predicted:  5.27499740<br />Residuals:  1.45577184<br />DataPartition: Train\",\"Predicted:  3.15802582<br />Residuals:  0.60937795<br />DataPartition: Train\",\"Predicted:  1.83575727<br />Residuals: -1.67790407<br />DataPartition: Train\",\"Predicted: -1.13670410<br />Residuals: -1.22736210<br />DataPartition: Train\",\"Predicted: -5.16509186<br />Residuals: -0.88817691<br />DataPartition: Train\",\"Predicted: -4.44985629<br />Residuals: -9.63949079<br />DataPartition: Train\",\"Predicted: -1.75445334<br />Residuals: -2.94554666<br />DataPartition: Train\",\"Predicted:  4.29170342<br />Residuals: 11.44806573<br />DataPartition: Train\",\"Predicted:  6.53065751<br />Residuals:  0.81295083<br />DataPartition: Train\",\"Predicted:  5.41306475<br />Residuals:  0.24571903<br />DataPartition: Train\",\"Predicted:  5.68388401<br />Residuals: -0.40810464<br />DataPartition: Train\",\"Predicted:  2.98471337<br />Residuals: -0.09936789<br />DataPartition: Train\",\"Predicted:  2.89423831<br />Residuals: -0.16361100<br />DataPartition: Train\",\"Predicted:  2.41919345<br />Residuals: -0.19218196<br />DataPartition: Train\",\"Predicted:  1.74599765<br />Residuals:  0.22167628<br />DataPartition: Train\",\"Predicted:  1.09948763<br />Residuals:  0.20995414<br />DataPartition: Train\",\"Predicted:  0.12320646<br />Residuals:  0.14890238<br />DataPartition: Train\",\"Predicted:  0.72934967<br />Residuals: -0.86503488<br />DataPartition: Train\",\"Predicted:  0.34377247<br />Residuals:  0.13177101<br />DataPartition: Train\",\"Predicted:  0.73430920<br />Residuals: -0.12578993<br />DataPartition: Train\",\"Predicted:  1.09126667<br />Residuals:  0.72324946<br />DataPartition: Train\",\"Predicted:  1.42456426<br />Residuals: -0.83050485<br />DataPartition: Train\",\"Predicted:  0.72553744<br />Residuals:  0.32433133<br />DataPartition: Train\",\"Predicted:  0.57377954<br />Residuals: -0.18416915<br />DataPartition: Train\",\"Predicted: -0.18721944<br />Residuals: -0.71834330<br />DataPartition: Train\",\"Predicted: -0.68487985<br />Residuals: -0.55532903<br />DataPartition: Train\",\"Predicted: -0.93510955<br />Residuals: -0.12239210<br />DataPartition: Train\",\"Predicted: -1.56133365<br />Residuals:  0.82653071<br />DataPartition: Train\",\"Predicted: -0.70013466<br />Residuals: -0.37658135<br />DataPartition: Train\",\"Predicted:  0.03537357<br />Residuals: -1.05578173<br />DataPartition: Train\",\"Predicted: -1.06408220<br />Residuals:  0.17061141<br />DataPartition: Train\",\"Predicted: -1.87861181<br />Residuals:  0.56099738<br />DataPartition: Train\",\"Predicted: -1.30841955<br />Residuals:  0.81650107<br />DataPartition: Train\",\"Predicted: -0.83895009<br />Residuals:  0.13273540<br />DataPartition: Train\",\"Predicted:  0.37846643<br />Residuals: -0.80520896<br />DataPartition: Train\",\"Predicted: -1.08886300<br />Residuals: -0.41113700<br />DataPartition: Train\",\"Predicted: -0.57438787<br />Residuals:  0.06677366<br />DataPartition: Train\",\"Predicted:  1.05035195<br />Residuals: -1.41478344<br />DataPartition: Train\",\"Predicted: -0.09044535<br />Residuals:  0.01729246<br />DataPartition: Train\",\"Predicted:  2.08128740<br />Residuals: -1.34922298<br />DataPartition: Train\",\"Predicted:  1.45636991<br />Residuals: -0.65695131<br />DataPartition: Train\",\"Predicted:  2.29759245<br />Residuals:  1.59570243<br />DataPartition: Train\",\"Predicted:  3.24810395<br />Residuals:  0.15231242<br />DataPartition: Train\",\"Predicted:  1.26049513<br />Residuals: -0.79069647<br />DataPartition: Train\",\"Predicted:  0.06608211<br />Residuals: -0.13288237<br />DataPartition: Train\",\"Predicted: -0.37825398<br />Residuals: -0.29019522<br />DataPartition: Train\",\"Predicted:  0.75149261<br />Residuals:  0.72899191<br />DataPartition: Train\",\"Predicted:  0.89772326<br />Residuals:  0.42853668<br />DataPartition: Train\",\"Predicted:  0.93833475<br />Residuals: -0.41477454<br />DataPartition: Train\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Train\",\"legendgroup\":\"Train\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-5.7498793270020059,7.1154449810690679],\"y\":[0,0],\"text\":\"yintercept: 0\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Residual Plot\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-5.7498793270020059,7.1154449810690679],\"tickmode\":\"array\",\"ticktext\":[\"-5.0\",\"-2.5\",\"0.0\",\"2.5\",\"5.0\"],\"tickvals\":[-5,-2.4999999999999996,0,2.5,5],\"categoryorder\":\"array\",\"categoryarray\":[\"-5.0\",\"-2.5\",\"0.0\",\"2.5\",\"5.0\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Predicted\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-10.693868616768022,12.502443551892501],\"tickmode\":\"array\",\"ticktext\":[\"-10\",\"-5\",\"0\",\"5\",\"10\"],\"tickvals\":[-10,-5,0,5,10],\"categoryorder\":\"array\",\"categoryarray\":[\"-10\",\"-5\",\"0\",\"5\",\"10\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Residuals\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5070363f4c0b\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"5070285c7d3c\":{\"yintercept\":{}}},\"cur_data\":\"5070363f4c0b\",\"visdat\":{\"5070363f4c0b\":[\"function (y) \",\"x\"],\"5070285c7d3c\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable (printout)\n```\n\n::: {.cell-output-display}\n|Error |    Train|     Test|\n|:-----|--------:|--------:|\n|RMSE  | 2.230949| 2.020507|\n|MAE   | 1.032237| 1.911078|\n:::\n:::\n\n\n#### Tab 2 - Predicted time series\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p2c)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-8d46619c198bf0caa430\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8d46619c198bf0caa430\">{\"x\":{\"data\":[{\"x\":[13027,13118,13208,13300,13392,13483,13573,13665,13757,13848,13939,14031,14123,14214,14304,14396,14488,14579,14669,14761,14853,14944,15034,15126,15218,15309,15400,15492,15584,15675,15765,15857,15949,16040,16130,16222,16314,16405,16495,16587,16679,16770,16861,16953,17045,17136,17226,17318,17410,17501,17591,17683,17775,17866,17956,18048,18140,18231,18322,18414,18506,18597,18687,18779,18871,18962,19052,19144,19236,19327,19417,19509,19601,19692],\"y\":[83.299999999999997,84.5,85.799999999999997,87.299999999999997,89.599999999999994,93.099999999999994,97.599999999999994,105.59999999999999,114.40000000000001,122.09999999999999,126.7,126.90000000000001,123.90000000000001,116.40000000000001,100,95.299999999999997,110.3,118.40000000000001,125.09999999999999,131.69999999999999,135.5,139.19999999999999,142.30000000000001,145.09999999999999,147,147.40000000000001,147.19999999999999,147.90000000000001,148.80000000000001,151.5,152.40000000000001,154,154.59999999999999,153.19999999999999,151.30000000000001,149.69999999999999,148.59999999999999,147,145.5,144.19999999999999,142.30000000000001,141.59999999999999,140.59999999999999,140,137.90000000000001,137.19999999999999,136.69999999999999,136.59999999999999,137.59999999999999,138.69999999999999,144.09999999999999,149,149.69999999999999,149.59999999999999,148.59999999999999,150.80000000000001,152.80000000000001,153.59999999999999,152.09999999999999,152.59999999999999,153.80000000000001,157,162.19999999999999,163.5,165.30000000000001,173.59999999999999,174.80000000000001,180.90000000000001,187.80000000000001,188.59999999999999,194.80000000000001,194.40000000000001,196,201.5],\"text\":[\"Date: 2005-09-01<br />dependentVariable:  83.3\",\"Date: 2005-12-01<br />dependentVariable:  84.5\",\"Date: 2006-03-01<br />dependentVariable:  85.8\",\"Date: 2006-06-01<br />dependentVariable:  87.3\",\"Date: 2006-09-01<br />dependentVariable:  89.6\",\"Date: 2006-12-01<br />dependentVariable:  93.1\",\"Date: 2007-03-01<br />dependentVariable:  97.6\",\"Date: 2007-06-01<br />dependentVariable: 105.6\",\"Date: 2007-09-01<br />dependentVariable: 114.4\",\"Date: 2007-12-01<br />dependentVariable: 122.1\",\"Date: 2008-03-01<br />dependentVariable: 126.7\",\"Date: 2008-06-01<br />dependentVariable: 126.9\",\"Date: 2008-09-01<br />dependentVariable: 123.9\",\"Date: 2008-12-01<br />dependentVariable: 116.4\",\"Date: 2009-03-01<br />dependentVariable: 100.0\",\"Date: 2009-06-01<br />dependentVariable:  95.3\",\"Date: 2009-09-01<br />dependentVariable: 110.3\",\"Date: 2009-12-01<br />dependentVariable: 118.4\",\"Date: 2010-03-01<br />dependentVariable: 125.1\",\"Date: 2010-06-01<br />dependentVariable: 131.7\",\"Date: 2010-09-01<br />dependentVariable: 135.5\",\"Date: 2010-12-01<br />dependentVariable: 139.2\",\"Date: 2011-03-01<br />dependentVariable: 142.3\",\"Date: 2011-06-01<br />dependentVariable: 145.1\",\"Date: 2011-09-01<br />dependentVariable: 147.0\",\"Date: 2011-12-01<br />dependentVariable: 147.4\",\"Date: 2012-03-01<br />dependentVariable: 147.2\",\"Date: 2012-06-01<br />dependentVariable: 147.9\",\"Date: 2012-09-01<br />dependentVariable: 148.8\",\"Date: 2012-12-01<br />dependentVariable: 151.5\",\"Date: 2013-03-01<br />dependentVariable: 152.4\",\"Date: 2013-06-01<br />dependentVariable: 154.0\",\"Date: 2013-09-01<br />dependentVariable: 154.6\",\"Date: 2013-12-01<br />dependentVariable: 153.2\",\"Date: 2014-03-01<br />dependentVariable: 151.3\",\"Date: 2014-06-01<br />dependentVariable: 149.7\",\"Date: 2014-09-01<br />dependentVariable: 148.6\",\"Date: 2014-12-01<br />dependentVariable: 147.0\",\"Date: 2015-03-01<br />dependentVariable: 145.5\",\"Date: 2015-06-01<br />dependentVariable: 144.2\",\"Date: 2015-09-01<br />dependentVariable: 142.3\",\"Date: 2015-12-01<br />dependentVariable: 141.6\",\"Date: 2016-03-01<br />dependentVariable: 140.6\",\"Date: 2016-06-01<br />dependentVariable: 140.0\",\"Date: 2016-09-01<br />dependentVariable: 137.9\",\"Date: 2016-12-01<br />dependentVariable: 137.2\",\"Date: 2017-03-01<br />dependentVariable: 136.7\",\"Date: 2017-06-01<br />dependentVariable: 136.6\",\"Date: 2017-09-01<br />dependentVariable: 137.6\",\"Date: 2017-12-01<br />dependentVariable: 138.7\",\"Date: 2018-03-01<br />dependentVariable: 144.1\",\"Date: 2018-06-01<br />dependentVariable: 149.0\",\"Date: 2018-09-01<br />dependentVariable: 149.7\",\"Date: 2018-12-01<br />dependentVariable: 149.6\",\"Date: 2019-03-01<br />dependentVariable: 148.6\",\"Date: 2019-06-01<br />dependentVariable: 150.8\",\"Date: 2019-09-01<br />dependentVariable: 152.8\",\"Date: 2019-12-01<br />dependentVariable: 153.6\",\"Date: 2020-03-01<br />dependentVariable: 152.1\",\"Date: 2020-06-01<br />dependentVariable: 152.6\",\"Date: 2020-09-01<br />dependentVariable: 153.8\",\"Date: 2020-12-01<br />dependentVariable: 157.0\",\"Date: 2021-03-01<br />dependentVariable: 162.2\",\"Date: 2021-06-01<br />dependentVariable: 163.5\",\"Date: 2021-09-01<br />dependentVariable: 165.3\",\"Date: 2021-12-01<br />dependentVariable: 173.6\",\"Date: 2022-03-01<br />dependentVariable: 174.8\",\"Date: 2022-06-01<br />dependentVariable: 180.9\",\"Date: 2022-09-01<br />dependentVariable: 187.8\",\"Date: 2022-12-01<br />dependentVariable: 188.6\",\"Date: 2023-03-01<br />dependentVariable: 194.8\",\"Date: 2023-06-01<br />dependentVariable: 194.4\",\"Date: 2023-09-01<br />dependentVariable: 196.0\",\"Date: 2023-12-01<br />dependentVariable: 201.5\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.6456692913385824,\"color\":\"rgba(0,255,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[18322,18414,18506,18597,18687,18779,18871,18962,19052,19144,19236,19327,19417,19509,19601,19692],\"y\":[153.01227758030262,150.8745734721368,150.49471190426684,153.34282486322354,158.95252444565241,164.30691019980523,167.60143576258088,169.47761954145997,176.9290980504143,180.61370288363881,181.32234809859349,182.44131039778389,182.11773860365113,184.464419818332,180.50544879054942,180.77190382502116],\"text\":[\"Date: 2020-03-01<br />Predicted: 153.0123<br />DataPartition: Test\",\"Date: 2020-06-01<br />Predicted: 150.8746<br />DataPartition: Test\",\"Date: 2020-09-01<br />Predicted: 150.4947<br />DataPartition: Test\",\"Date: 2020-12-01<br />Predicted: 153.3428<br />DataPartition: Test\",\"Date: 2021-03-01<br />Predicted: 158.9525<br />DataPartition: Test\",\"Date: 2021-06-01<br />Predicted: 164.3069<br />DataPartition: Test\",\"Date: 2021-09-01<br />Predicted: 167.6014<br />DataPartition: Test\",\"Date: 2021-12-01<br />Predicted: 169.4776<br />DataPartition: Test\",\"Date: 2022-03-01<br />Predicted: 176.9291<br />DataPartition: Test\",\"Date: 2022-06-01<br />Predicted: 180.6137<br />DataPartition: Test\",\"Date: 2022-09-01<br />Predicted: 181.3223<br />DataPartition: Test\",\"Date: 2022-12-01<br />Predicted: 182.4413<br />DataPartition: Test\",\"Date: 2023-03-01<br />Predicted: 182.1177<br />DataPartition: Test\",\"Date: 2023-06-01<br />Predicted: 184.4644<br />DataPartition: Test\",\"Date: 2023-09-01<br />Predicted: 180.5054<br />DataPartition: Test\",\"Date: 2023-12-01<br />Predicted: 180.7719<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.6456692913385824,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"dot\"},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Time Series of Quarterly Price Index (Actual index in green)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[12693.75,20025.25],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"tickvals\":[12784,14610,16436,18262],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[77.390000000000001,207.41],\"tickmode\":\"array\",\"ticktext\":[\"100\",\"125\",\"150\",\"175\",\"200\"],\"tickvals\":[100,125,150,175,200],\"categoryorder\":\"array\",\"categoryarray\":[\"100\",\"125\",\"150\",\"175\",\"200\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Price Index\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5070176d2e4e\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"50706bef2e\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"5070176d2e4e\",\"visdat\":{\"5070176d2e4e\":[\"function (y) \",\"x\"],\"50706bef2e\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n:::\n\n## 3.4 Prototype of Prophet Model\n\nThe prototype uses **prophet()** of the Prophet package to model the property price index using explanatory variable for forecasting, to make predictions on the subsequent periods based on new / unseen data.\n\n::: callout-important\n#### Parameters for user inputs\n\nThe following will be made available as user inputs:\n\n-   Variables selection\n    -   Type of data to use for prediction - Select from possible values of 'actual' or 'diff.\n    -   Forecast from which year - Select from possible values of 2018 to 2022\n    -   Explanatory variables - Select from list of explanatory variables (raw material prices, STI, Bond/bill rates, SORA rate)\n    -   Which property price index to forecast - Select from a list of property price indices (refer to 3.1 for list)\n-   Model parameters\n    -   Mode for handling seasonalities (seasonality.mode) - Select from additive' (default) or 'multiplicative'\n    -   Growth modeling (growth) - Select from 'linear', 'logistic', 'flat'\n    -   Fit yearly seasonality (yearly.seasonality) - Select from values 'auto', TRUE, FALSE\n:::\n\nThe code chunk below simulates the user inputs from the Shiny App:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\n# choose whether to model actual values or difference across periods\ndata_selected = data_quarter_actual\nselected = \"actual\"\n# this is cutoff value of year for training/testing data selection                \ncut_off_year = 2020\n# to store explanatory variables - will be user inputs\nexplanatory <- c(\"Cement\", \"SteelBar\", \"Granite\", \"ConcretingSand\", \"ReadyMixConcrete\", \"Index\", \"Bill1Yr\", \"Bond2Yr\", \"Bond5Yr\", \"Bond10Yr\", \"Rate\", 'PR_All_Lag_1', 'PR_All_Lag_2', 'PR_All_Lag_3', 'PR_All_Lag_4')\n# to store dependent variable to model\ndependent <- c(\"PR_All\")\n# to do case stetament in Shiny for switching between different time series\ndata_selected <- data_selected %>% \n  rename(y = PR_All)\ndata_actual_temp <- data_quarter_actual %>% \n  rename(y = PR_All) %>% \n  select(Date, y)\n\n# modes for handling seasonalities (Either 'additive' (default) or 'multiplicative')\nseasonality.mode = 'multiplicative'\n# Prophet allows for logistic growth modeling by default but can be adjusted for linear growth (values are 'linear', 'logistic', 'flat')\ngrowth = 'linear'\n# Fit yearly seasonality (values are 'auto', TRUE, FALSE)\nyearly.seasonality = 'auto'\n```\n:::\n\n\nThe code chunk below shows the preparation of the dataset based on user selected inputs, including the partitioning of the dataset into training and testing datasets based on the user selected year to start forecasting from.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nppi_pp_train <- subset(data_selected, as.numeric(year(Date)) < cut_off_year) %>% \n  select(-QuarterLabel) %>%\n  select(Date, all_of(explanatory), y) %>% \n  rename(ds = Date) %>% \n  na.omit()\n\nppi_pp_test <- subset(data_selected, as.numeric(year(Date)) >= cut_off_year) %>% \n  select(-QuarterLabel) %>% \n  select(Date, all_of(explanatory), y) %>% \n  rename(ds = Date)\n```\n:::\n\n\nThe code chunk below uses **prophet()** to create the model using the training dataset with the user selected model parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\npp_model <- prophet(seasonality.mode = seasonality.mode, growth = growth, yearly.seasonality = yearly.seasonality, uncertainty.samples = 500)\n\n# to select regressors based on user inputs\npp_model <- add_regressor(pp_model, 'Cement')\npp_model <- add_regressor(pp_model, 'SteelBar')\npp_model <- add_regressor(pp_model, 'Granite')\npp_model <- add_regressor(pp_model, 'ConcretingSand')\npp_model <- add_regressor(pp_model, 'ReadyMixConcrete')\npp_model <- add_regressor(pp_model, 'PR_All_Lag_1')\npp_model <- add_regressor(pp_model, 'PR_All_Lag_2')\npp_model <- add_regressor(pp_model, 'PR_All_Lag_3')\npp_model <- add_regressor(pp_model, 'PR_All_Lag_4')\n\npp_model <- fit.prophet(pp_model, ppi_pp_train)\n```\n:::\n\n\nThe following code chunks uses the trained model for predictions on the test data, and the results are shown as ggploty plots. The result plots provided are:\n\n-   Tab 1:\n    -   Predicted vs actual values\n    -   Residuals\n-   Tab 2:\n    -   Predicted time series\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nforecast_train <- predict(pp_model, ppi_pp_train)\nforecast <- predict(pp_model, ppi_pp_test)\n\n# Tab 1 - plot actual vs predicted\ntrain_predict <- forecast_train %>% \n  select(ds, yhat) %>% \n  mutate(\"DataPartition\" = \"Train\") %>% \n  mutate('Actual' = ppi_pp_train$y) %>% \n  rename(Date=ds, Predicted=yhat)\ntest_predict <- forecast %>% \n  select(ds, yhat) %>% \n  mutate(\"DataPartition\" = \"Test\") %>% \n  mutate('Actual' = ppi_pp_test$y) %>% \n  rename(Date=ds, Predicted=yhat)\ntrain_test <- train_predict %>% \n  bind_rows(test_predict) \n\n# compute RMSE and MAE\nrmse_train <- sqrt(mean((train_predict$Actual - train_predict$Predicted)^2))\nmae_train <- mean(abs(train_predict$Actual - train_predict$Predicted))\n\nrmse_test <- sqrt(mean((test_predict$Actual - test_predict$Predicted)^2))\nmae_test <- mean(abs(test_predict$Actual - test_predict$Predicted))\n\nprintout <- data.frame(\n  Error = c('RMSE', 'MAE'),\n  Train = c(rmse_train, mae_train),\n  Test = c(rmse_test, mae_test))\n\n\nx_lim_min <- floor(train_test['Actual'] %>% min())\ny_lim_min <- floor(train_test['Predicted'] %>% min())\nx_lim_max <- ceiling(train_test['Actual'] %>% max())\ny_lim_max <- ceiling(train_test['Predicted'] %>% max())\n\np3a <- ggplot(data = train_test, \n             aes(x = Actual, \n                 y = Predicted, \n                 color = DataPartition)) +\n  geom_abline(intercept = 0, slope = 1, color = \"red\", linetype = \"dashed\") +  # Add a diagonal line for reference\n  geom_point(alpha = 0.5) +\n  labs(x = \"Actual\", \n       y = \"Predicted\", \n       title = \"Actual vs. Predicted Values\") + \n  scale_x_continuous(limits = c(min(x_lim_min, y_lim_min), max(x_lim_max, y_lim_max))) +\n  scale_y_continuous(limits = c(min(x_lim_min, y_lim_min), max(x_lim_max, y_lim_max))) +\n  theme_bw()\n\n# Tab 1 - to plot residuals\ntrain_test$Residuals <- train_test$Actual - train_test$Predicted\np3b <- ggplot(data=train_test, aes(x=Predicted, y=Residuals, colour = DataPartition)) + \n  geom_point() +\n  geom_hline(yintercept=0, color = 'Red', linetype = 'dashed') +\n  labs(title = \"Residual Plot\") +\n  theme_bw()\n\n# Tab 2 - to plot time series of index (with forecasting)\nresults <- test_predict\ndata_actual_temp <- data_actual_temp %>% \n  rename(dependentVariable = y)\nif (selected == \"diff\") {\n  results <- recover_actual(results, data_actual_temp$dependentVariable[nrow(data_actual_temp) - nrow(results)]) %>% \n    mutate(Date = (data_actual_temp$Date[(nrow(data_actual_temp) - nrow(results) + 1) : (nrow(data_actual_temp))]))\n}\n\nresults <- results %>% \n  mutate(Date = (data_actual_temp$Date[(nrow(data_actual_temp) - nrow(results) + 1) : (nrow(data_actual_temp))]))\n\np3c <- ggplot() +\n  geom_line(data=data_actual_temp,\n            aes(x = Date, y = dependentVariable),\n            colour = \"green\",\n            size = 0.7) +\n  geom_line(data=results,\n            aes(x = Date, y = Predicted, color = DataPartition),\n            linetype = 'dotted',\n            size = 0.7) +\n  labs(y = \"Price Index\",\n       x = 'Year',\n       title = \"Time Series of Quarterly Price Index (Actual index in green)\") +\n  theme_bw()\n```\n:::\n\n\nThe prototype plots are:\n\n::: panel-tabset\n#### Tab 1 - Prediction results using model\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p3a)  \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-9be1d664aaef54419a6d\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9be1d664aaef54419a6d\">{\"x\":{\"data\":[{\"x\":[83.349999999999994,207.65000000000001],\"y\":[83.349999999999994,207.65000000000001],\"text\":\"intercept: 0<br />slope: 1\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[152.09999999999999,152.59999999999999,153.80000000000001,157,162.19999999999999,163.5,165.30000000000001,173.59999999999999,174.80000000000001,180.90000000000001,187.80000000000001,188.59999999999999,194.80000000000001,194.40000000000001,196,201.5],\"y\":[154.48266161073312,152.52611363597083,155.46699504277001,159.41152071199156,161.79765931642123,167.52558015778069,167.56517018439416,170.48749767960032,184.59326818230289,184.49518704032093,191.22939744547594,196.27270786895619,193.32465515949508,200.21027172706465,191.65924584183327,192.38862088522777],\"text\":[\"Actual: 152.1<br />Predicted: 154.48266<br />DataPartition: Test\",\"Actual: 152.6<br />Predicted: 152.52611<br />DataPartition: Test\",\"Actual: 153.8<br />Predicted: 155.46700<br />DataPartition: Test\",\"Actual: 157.0<br />Predicted: 159.41152<br />DataPartition: Test\",\"Actual: 162.2<br />Predicted: 161.79766<br />DataPartition: Test\",\"Actual: 163.5<br />Predicted: 167.52558<br />DataPartition: Test\",\"Actual: 165.3<br />Predicted: 167.56517<br />DataPartition: Test\",\"Actual: 173.6<br />Predicted: 170.48750<br />DataPartition: Test\",\"Actual: 174.8<br />Predicted: 184.59327<br />DataPartition: Test\",\"Actual: 180.9<br />Predicted: 184.49519<br />DataPartition: Test\",\"Actual: 187.8<br />Predicted: 191.22940<br />DataPartition: Test\",\"Actual: 188.6<br />Predicted: 196.27271<br />DataPartition: Test\",\"Actual: 194.8<br />Predicted: 193.32466<br />DataPartition: Test\",\"Actual: 194.4<br />Predicted: 200.21027<br />DataPartition: Test\",\"Actual: 196.0<br />Predicted: 191.65925<br />DataPartition: Test\",\"Actual: 201.5<br />Predicted: 192.38862<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[89.599999999999994,93.099999999999994,97.599999999999994,105.59999999999999,114.40000000000001,122.09999999999999,126.7,126.90000000000001,123.90000000000001,116.40000000000001,100,95.299999999999997,110.3,118.40000000000001,125.09999999999999,131.69999999999999,135.5,139.19999999999999,142.30000000000001,145.09999999999999,147,147.40000000000001,147.19999999999999,147.90000000000001,148.80000000000001,151.5,152.40000000000001,154,154.59999999999999,153.19999999999999,151.30000000000001,149.69999999999999,148.59999999999999,147,145.5,144.19999999999999,142.30000000000001,141.59999999999999,140.59999999999999,140,137.90000000000001,137.19999999999999,136.69999999999999,136.59999999999999,137.59999999999999,138.69999999999999,144.09999999999999,149,149.69999999999999,149.59999999999999,148.59999999999999,150.80000000000001,152.80000000000001,153.59999999999999],\"y\":[89.767501088133116,92.697186170696625,97.827423637034542,105.41206703943067,114.87384772080379,122.11434624248241,126.1087552182438,127.19546015717896,124.50963403218655,115.02056244862662,100.38279329373451,96.429620999592046,109.55033310654414,118.85801494609511,124.53615641686567,131.90231315259061,135.53073658123373,139.06151286310674,142.11456748773435,145.81411613186813,146.62933957278915,147.30392392370817,147.46825342351755,147.42168801886848,148.97088733383771,151.11399824331482,153.42820610516466,153.714137452534,153.94123064164935,153.54494629740208,151.23501371739505,150.0024911853213,148.39196560309662,146.96615322527776,145.43153545328582,144.16280775412665,142.56942663961192,141.28706840428819,141.07172995159914,139.57281149116903,137.92143000490142,137.40643819133132,136.26863121345548,136.77807359841572,137.25562737086221,140.47579321417646,142.17927884694339,148.93268850492802,150.94876198190056,148.73247236184901,149.97192163208217,149.76210862383078,152.28814196434965,154.03925102496584],\"text\":[\"Actual:  89.6<br />Predicted:  89.76750<br />DataPartition: Train\",\"Actual:  93.1<br />Predicted:  92.69719<br />DataPartition: Train\",\"Actual:  97.6<br />Predicted:  97.82742<br />DataPartition: Train\",\"Actual: 105.6<br />Predicted: 105.41207<br />DataPartition: Train\",\"Actual: 114.4<br />Predicted: 114.87385<br />DataPartition: Train\",\"Actual: 122.1<br />Predicted: 122.11435<br />DataPartition: Train\",\"Actual: 126.7<br />Predicted: 126.10876<br />DataPartition: Train\",\"Actual: 126.9<br />Predicted: 127.19546<br />DataPartition: Train\",\"Actual: 123.9<br />Predicted: 124.50963<br />DataPartition: Train\",\"Actual: 116.4<br />Predicted: 115.02056<br />DataPartition: Train\",\"Actual: 100.0<br />Predicted: 100.38279<br />DataPartition: Train\",\"Actual:  95.3<br />Predicted:  96.42962<br />DataPartition: Train\",\"Actual: 110.3<br />Predicted: 109.55033<br />DataPartition: Train\",\"Actual: 118.4<br />Predicted: 118.85801<br />DataPartition: Train\",\"Actual: 125.1<br />Predicted: 124.53616<br />DataPartition: Train\",\"Actual: 131.7<br />Predicted: 131.90231<br />DataPartition: Train\",\"Actual: 135.5<br />Predicted: 135.53074<br />DataPartition: Train\",\"Actual: 139.2<br />Predicted: 139.06151<br />DataPartition: Train\",\"Actual: 142.3<br />Predicted: 142.11457<br />DataPartition: Train\",\"Actual: 145.1<br />Predicted: 145.81412<br />DataPartition: Train\",\"Actual: 147.0<br />Predicted: 146.62934<br />DataPartition: Train\",\"Actual: 147.4<br />Predicted: 147.30392<br />DataPartition: Train\",\"Actual: 147.2<br />Predicted: 147.46825<br />DataPartition: Train\",\"Actual: 147.9<br />Predicted: 147.42169<br />DataPartition: Train\",\"Actual: 148.8<br />Predicted: 148.97089<br />DataPartition: Train\",\"Actual: 151.5<br />Predicted: 151.11400<br />DataPartition: Train\",\"Actual: 152.4<br />Predicted: 153.42821<br />DataPartition: Train\",\"Actual: 154.0<br />Predicted: 153.71414<br />DataPartition: Train\",\"Actual: 154.6<br />Predicted: 153.94123<br />DataPartition: Train\",\"Actual: 153.2<br />Predicted: 153.54495<br />DataPartition: Train\",\"Actual: 151.3<br />Predicted: 151.23501<br />DataPartition: Train\",\"Actual: 149.7<br />Predicted: 150.00249<br />DataPartition: Train\",\"Actual: 148.6<br />Predicted: 148.39197<br />DataPartition: Train\",\"Actual: 147.0<br />Predicted: 146.96615<br />DataPartition: Train\",\"Actual: 145.5<br />Predicted: 145.43154<br />DataPartition: Train\",\"Actual: 144.2<br />Predicted: 144.16281<br />DataPartition: Train\",\"Actual: 142.3<br />Predicted: 142.56943<br />DataPartition: Train\",\"Actual: 141.6<br />Predicted: 141.28707<br />DataPartition: Train\",\"Actual: 140.6<br />Predicted: 141.07173<br />DataPartition: Train\",\"Actual: 140.0<br />Predicted: 139.57281<br />DataPartition: Train\",\"Actual: 137.9<br />Predicted: 137.92143<br />DataPartition: Train\",\"Actual: 137.2<br />Predicted: 137.40644<br />DataPartition: Train\",\"Actual: 136.7<br />Predicted: 136.26863<br />DataPartition: Train\",\"Actual: 136.6<br />Predicted: 136.77807<br />DataPartition: Train\",\"Actual: 137.6<br />Predicted: 137.25563<br />DataPartition: Train\",\"Actual: 138.7<br />Predicted: 140.47579<br />DataPartition: Train\",\"Actual: 144.1<br />Predicted: 142.17928<br />DataPartition: Train\",\"Actual: 149.0<br />Predicted: 148.93269<br />DataPartition: Train\",\"Actual: 149.7<br />Predicted: 150.94876<br />DataPartition: Train\",\"Actual: 149.6<br />Predicted: 148.73247<br />DataPartition: Train\",\"Actual: 148.6<br />Predicted: 149.97192<br />DataPartition: Train\",\"Actual: 150.8<br />Predicted: 149.76211<br />DataPartition: Train\",\"Actual: 152.8<br />Predicted: 152.28814<br />DataPartition: Train\",\"Actual: 153.6<br />Predicted: 154.03925<br />DataPartition: Train\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Train\",\"legendgroup\":\"Train\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Actual vs. Predicted Values\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[83.349999999999994,207.65000000000001],\"tickmode\":\"array\",\"ticktext\":[\"90\",\"120\",\"150\",\"180\"],\"tickvals\":[90,120,150,180],\"categoryorder\":\"array\",\"categoryarray\":[\"90\",\"120\",\"150\",\"180\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Actual\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[83.349999999999994,207.65000000000001],\"tickmode\":\"array\",\"ticktext\":[\"90\",\"120\",\"150\",\"180\"],\"tickvals\":[90,120,150,180],\"categoryorder\":\"array\",\"categoryarray\":[\"90\",\"120\",\"150\",\"180\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Predicted\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"507037be424d\":{\"intercept\":{},\"slope\":{},\"type\":\"scatter\"},\"50706f595cf9\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"507037be424d\",\"visdat\":{\"507037be424d\":[\"function (y) \",\"x\"],\"50706f595cf9\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p3b)   \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-08affcb406ca092dc8e1\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-08affcb406ca092dc8e1\">{\"x\":{\"data\":[{\"x\":[154.48266161073312,152.52611363597083,155.46699504277001,159.41152071199156,161.79765931642123,167.52558015778069,167.56517018439416,170.48749767960032,184.59326818230289,184.49518704032093,191.22939744547594,196.27270786895619,193.32465515949508,200.21027172706465,191.65924584183327,192.38862088522777],\"y\":[-2.3826616107331233,0.073886364029164042,-1.6669950427699973,-2.4115207119915567,0.40234068357875685,-4.0255801577806949,-2.265170184394151,3.1125023203996705,-9.7932681823028815,-3.5951870403209227,-3.429397445475928,-7.6727078689561949,1.4753448405049312,-5.8102717270646451,4.3407541581667317,9.1113791147722338],\"text\":[\"Predicted: 154.48266<br />Residuals: -2.38266161<br />DataPartition: Test\",\"Predicted: 152.52611<br />Residuals:  0.07388636<br />DataPartition: Test\",\"Predicted: 155.46700<br />Residuals: -1.66699504<br />DataPartition: Test\",\"Predicted: 159.41152<br />Residuals: -2.41152071<br />DataPartition: Test\",\"Predicted: 161.79766<br />Residuals:  0.40234068<br />DataPartition: Test\",\"Predicted: 167.52558<br />Residuals: -4.02558016<br />DataPartition: Test\",\"Predicted: 167.56517<br />Residuals: -2.26517018<br />DataPartition: Test\",\"Predicted: 170.48750<br />Residuals:  3.11250232<br />DataPartition: Test\",\"Predicted: 184.59327<br />Residuals: -9.79326818<br />DataPartition: Test\",\"Predicted: 184.49519<br />Residuals: -3.59518704<br />DataPartition: Test\",\"Predicted: 191.22940<br />Residuals: -3.42939745<br />DataPartition: Test\",\"Predicted: 196.27271<br />Residuals: -7.67270787<br />DataPartition: Test\",\"Predicted: 193.32466<br />Residuals:  1.47534484<br />DataPartition: Test\",\"Predicted: 200.21027<br />Residuals: -5.81027173<br />DataPartition: Test\",\"Predicted: 191.65925<br />Residuals:  4.34075416<br />DataPartition: Test\",\"Predicted: 192.38862<br />Residuals:  9.11137911<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[89.767501088133116,92.697186170696625,97.827423637034542,105.41206703943067,114.87384772080379,122.11434624248241,126.1087552182438,127.19546015717896,124.50963403218655,115.02056244862662,100.38279329373451,96.429620999592046,109.55033310654414,118.85801494609511,124.53615641686567,131.90231315259061,135.53073658123373,139.06151286310674,142.11456748773435,145.81411613186813,146.62933957278915,147.30392392370817,147.46825342351755,147.42168801886848,148.97088733383771,151.11399824331482,153.42820610516466,153.714137452534,153.94123064164935,153.54494629740208,151.23501371739505,150.0024911853213,148.39196560309662,146.96615322527776,145.43153545328582,144.16280775412665,142.56942663961192,141.28706840428819,141.07172995159914,139.57281149116903,137.92143000490142,137.40643819133132,136.26863121345548,136.77807359841572,137.25562737086221,140.47579321417646,142.17927884694339,148.93268850492802,150.94876198190056,148.73247236184901,149.97192163208217,149.76210862383078,152.28814196434965,154.03925102496584],\"y\":[-0.16750108813312181,0.40281382930336918,-0.22742363703454771,0.18793296056932718,-0.47384772080378923,-0.014346242482417892,0.59124478175620254,-0.29546015717895102,-0.60963403218654832,1.3794375513733854,-0.38279329373450821,-1.1296209995920492,0.7496668934558528,-0.45801494609510485,0.5638435831343287,-0.20231315259061944,-0.030736581233725246,0.13848713689324654,0.18543251226566326,-0.71411613186813838,0.37066042721085068,0.096076076291836898,-0.26825342351756376,0.47831198113152595,-0.1708873338376975,0.38600175668517522,-1.0282061051646565,0.28586254746599593,0.65876935835063932,-0.34494629740208893,0.064986282604962753,-0.30249118532131547,0.208034396903372,0.033846774722235295,0.068464546714182006,0.037192245873342245,-0.2694266396119076,0.3129315957118024,-0.47172995159914421,0.42718850883096593,-0.021430004901418442,-0.20643819133132979,0.43136878654451039,-0.17807359841572179,0.34437262913778,-1.7757932141764741,1.9207211530566042,0.067311495071976424,-1.2487619819005715,0.86752763815098888,-1.3719216320821772,1.0378913761692274,0.51185803565036281,-0.43925102496584145],\"text\":[\"Predicted:  89.76750<br />Residuals: -0.16750109<br />DataPartition: Train\",\"Predicted:  92.69719<br />Residuals:  0.40281383<br />DataPartition: Train\",\"Predicted:  97.82742<br />Residuals: -0.22742364<br />DataPartition: Train\",\"Predicted: 105.41207<br />Residuals:  0.18793296<br />DataPartition: Train\",\"Predicted: 114.87385<br />Residuals: -0.47384772<br />DataPartition: Train\",\"Predicted: 122.11435<br />Residuals: -0.01434624<br />DataPartition: Train\",\"Predicted: 126.10876<br />Residuals:  0.59124478<br />DataPartition: Train\",\"Predicted: 127.19546<br />Residuals: -0.29546016<br />DataPartition: Train\",\"Predicted: 124.50963<br />Residuals: -0.60963403<br />DataPartition: Train\",\"Predicted: 115.02056<br />Residuals:  1.37943755<br />DataPartition: Train\",\"Predicted: 100.38279<br />Residuals: -0.38279329<br />DataPartition: Train\",\"Predicted:  96.42962<br />Residuals: -1.12962100<br />DataPartition: Train\",\"Predicted: 109.55033<br />Residuals:  0.74966689<br />DataPartition: Train\",\"Predicted: 118.85801<br />Residuals: -0.45801495<br />DataPartition: Train\",\"Predicted: 124.53616<br />Residuals:  0.56384358<br />DataPartition: Train\",\"Predicted: 131.90231<br />Residuals: -0.20231315<br />DataPartition: Train\",\"Predicted: 135.53074<br />Residuals: -0.03073658<br />DataPartition: Train\",\"Predicted: 139.06151<br />Residuals:  0.13848714<br />DataPartition: Train\",\"Predicted: 142.11457<br />Residuals:  0.18543251<br />DataPartition: Train\",\"Predicted: 145.81412<br />Residuals: -0.71411613<br />DataPartition: Train\",\"Predicted: 146.62934<br />Residuals:  0.37066043<br />DataPartition: Train\",\"Predicted: 147.30392<br />Residuals:  0.09607608<br />DataPartition: Train\",\"Predicted: 147.46825<br />Residuals: -0.26825342<br />DataPartition: Train\",\"Predicted: 147.42169<br />Residuals:  0.47831198<br />DataPartition: Train\",\"Predicted: 148.97089<br />Residuals: -0.17088733<br />DataPartition: Train\",\"Predicted: 151.11400<br />Residuals:  0.38600176<br />DataPartition: Train\",\"Predicted: 153.42821<br />Residuals: -1.02820611<br />DataPartition: Train\",\"Predicted: 153.71414<br />Residuals:  0.28586255<br />DataPartition: Train\",\"Predicted: 153.94123<br />Residuals:  0.65876936<br />DataPartition: Train\",\"Predicted: 153.54495<br />Residuals: -0.34494630<br />DataPartition: Train\",\"Predicted: 151.23501<br />Residuals:  0.06498628<br />DataPartition: Train\",\"Predicted: 150.00249<br />Residuals: -0.30249119<br />DataPartition: Train\",\"Predicted: 148.39197<br />Residuals:  0.20803440<br />DataPartition: Train\",\"Predicted: 146.96615<br />Residuals:  0.03384677<br />DataPartition: Train\",\"Predicted: 145.43154<br />Residuals:  0.06846455<br />DataPartition: Train\",\"Predicted: 144.16281<br />Residuals:  0.03719225<br />DataPartition: Train\",\"Predicted: 142.56943<br />Residuals: -0.26942664<br />DataPartition: Train\",\"Predicted: 141.28707<br />Residuals:  0.31293160<br />DataPartition: Train\",\"Predicted: 141.07173<br />Residuals: -0.47172995<br />DataPartition: Train\",\"Predicted: 139.57281<br />Residuals:  0.42718851<br />DataPartition: Train\",\"Predicted: 137.92143<br />Residuals: -0.02143000<br />DataPartition: Train\",\"Predicted: 137.40644<br />Residuals: -0.20643819<br />DataPartition: Train\",\"Predicted: 136.26863<br />Residuals:  0.43136879<br />DataPartition: Train\",\"Predicted: 136.77807<br />Residuals: -0.17807360<br />DataPartition: Train\",\"Predicted: 137.25563<br />Residuals:  0.34437263<br />DataPartition: Train\",\"Predicted: 140.47579<br />Residuals: -1.77579321<br />DataPartition: Train\",\"Predicted: 142.17928<br />Residuals:  1.92072115<br />DataPartition: Train\",\"Predicted: 148.93269<br />Residuals:  0.06731150<br />DataPartition: Train\",\"Predicted: 150.94876<br />Residuals: -1.24876198<br />DataPartition: Train\",\"Predicted: 148.73247<br />Residuals:  0.86752764<br />DataPartition: Train\",\"Predicted: 149.97192<br />Residuals: -1.37192163<br />DataPartition: Train\",\"Predicted: 149.76211<br />Residuals:  1.03789138<br />DataPartition: Train\",\"Predicted: 152.28814<br />Residuals:  0.51185804<br />DataPartition: Train\",\"Predicted: 154.03925<br />Residuals: -0.43925102<br />DataPartition: Train\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Train\",\"legendgroup\":\"Train\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[84.245362556186535,205.73241025901123],\"y\":[0,0],\"text\":\"yintercept: 0\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Residual Plot\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[84.245362556186535,205.73241025901123],\"tickmode\":\"array\",\"ticktext\":[\"90\",\"120\",\"150\",\"180\"],\"tickvals\":[90,120,150,180],\"categoryorder\":\"array\",\"categoryarray\":[\"90\",\"120\",\"150\",\"180\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Predicted\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-10.738500547156637,10.056611479625989],\"tickmode\":\"array\",\"ticktext\":[\"-10\",\"-5\",\"0\",\"5\",\"10\"],\"tickvals\":[-10,-5,0,5,10],\"categoryorder\":\"array\",\"categoryarray\":[\"-10\",\"-5\",\"0\",\"5\",\"10\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Residuals\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"507063e5236c\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"50707e519bc\":{\"yintercept\":{}}},\"cur_data\":\"507063e5236c\",\"visdat\":{\"507063e5236c\":[\"function (y) \",\"x\"],\"50707e519bc\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code  code-summary=\"Show code\"}\nkable (printout)\n```\n\n::: {.cell-output-display}\n|Error |     Train|    Test|\n|:-----|---------:|-------:|\n|RMSE  | 0.6429573| 4.76132|\n|MAE   | 0.4742899| 3.84806|\n:::\n:::\n\n\n#### Tab 2 - Predicted time series\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show code\"}\nggplotly(p3c)  \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-1dc1b82509cd26d06e41\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1dc1b82509cd26d06e41\">{\"x\":{\"data\":[{\"x\":[13027,13118,13208,13300,13392,13483,13573,13665,13757,13848,13939,14031,14123,14214,14304,14396,14488,14579,14669,14761,14853,14944,15034,15126,15218,15309,15400,15492,15584,15675,15765,15857,15949,16040,16130,16222,16314,16405,16495,16587,16679,16770,16861,16953,17045,17136,17226,17318,17410,17501,17591,17683,17775,17866,17956,18048,18140,18231,18322,18414,18506,18597,18687,18779,18871,18962,19052,19144,19236,19327,19417,19509,19601,19692],\"y\":[83.299999999999997,84.5,85.799999999999997,87.299999999999997,89.599999999999994,93.099999999999994,97.599999999999994,105.59999999999999,114.40000000000001,122.09999999999999,126.7,126.90000000000001,123.90000000000001,116.40000000000001,100,95.299999999999997,110.3,118.40000000000001,125.09999999999999,131.69999999999999,135.5,139.19999999999999,142.30000000000001,145.09999999999999,147,147.40000000000001,147.19999999999999,147.90000000000001,148.80000000000001,151.5,152.40000000000001,154,154.59999999999999,153.19999999999999,151.30000000000001,149.69999999999999,148.59999999999999,147,145.5,144.19999999999999,142.30000000000001,141.59999999999999,140.59999999999999,140,137.90000000000001,137.19999999999999,136.69999999999999,136.59999999999999,137.59999999999999,138.69999999999999,144.09999999999999,149,149.69999999999999,149.59999999999999,148.59999999999999,150.80000000000001,152.80000000000001,153.59999999999999,152.09999999999999,152.59999999999999,153.80000000000001,157,162.19999999999999,163.5,165.30000000000001,173.59999999999999,174.80000000000001,180.90000000000001,187.80000000000001,188.59999999999999,194.80000000000001,194.40000000000001,196,201.5],\"text\":[\"Date: 2005-09-01<br />dependentVariable:  83.3\",\"Date: 2005-12-01<br />dependentVariable:  84.5\",\"Date: 2006-03-01<br />dependentVariable:  85.8\",\"Date: 2006-06-01<br />dependentVariable:  87.3\",\"Date: 2006-09-01<br />dependentVariable:  89.6\",\"Date: 2006-12-01<br />dependentVariable:  93.1\",\"Date: 2007-03-01<br />dependentVariable:  97.6\",\"Date: 2007-06-01<br />dependentVariable: 105.6\",\"Date: 2007-09-01<br />dependentVariable: 114.4\",\"Date: 2007-12-01<br />dependentVariable: 122.1\",\"Date: 2008-03-01<br />dependentVariable: 126.7\",\"Date: 2008-06-01<br />dependentVariable: 126.9\",\"Date: 2008-09-01<br />dependentVariable: 123.9\",\"Date: 2008-12-01<br />dependentVariable: 116.4\",\"Date: 2009-03-01<br />dependentVariable: 100.0\",\"Date: 2009-06-01<br />dependentVariable:  95.3\",\"Date: 2009-09-01<br />dependentVariable: 110.3\",\"Date: 2009-12-01<br />dependentVariable: 118.4\",\"Date: 2010-03-01<br />dependentVariable: 125.1\",\"Date: 2010-06-01<br />dependentVariable: 131.7\",\"Date: 2010-09-01<br />dependentVariable: 135.5\",\"Date: 2010-12-01<br />dependentVariable: 139.2\",\"Date: 2011-03-01<br />dependentVariable: 142.3\",\"Date: 2011-06-01<br />dependentVariable: 145.1\",\"Date: 2011-09-01<br />dependentVariable: 147.0\",\"Date: 2011-12-01<br />dependentVariable: 147.4\",\"Date: 2012-03-01<br />dependentVariable: 147.2\",\"Date: 2012-06-01<br />dependentVariable: 147.9\",\"Date: 2012-09-01<br />dependentVariable: 148.8\",\"Date: 2012-12-01<br />dependentVariable: 151.5\",\"Date: 2013-03-01<br />dependentVariable: 152.4\",\"Date: 2013-06-01<br />dependentVariable: 154.0\",\"Date: 2013-09-01<br />dependentVariable: 154.6\",\"Date: 2013-12-01<br />dependentVariable: 153.2\",\"Date: 2014-03-01<br />dependentVariable: 151.3\",\"Date: 2014-06-01<br />dependentVariable: 149.7\",\"Date: 2014-09-01<br />dependentVariable: 148.6\",\"Date: 2014-12-01<br />dependentVariable: 147.0\",\"Date: 2015-03-01<br />dependentVariable: 145.5\",\"Date: 2015-06-01<br />dependentVariable: 144.2\",\"Date: 2015-09-01<br />dependentVariable: 142.3\",\"Date: 2015-12-01<br />dependentVariable: 141.6\",\"Date: 2016-03-01<br />dependentVariable: 140.6\",\"Date: 2016-06-01<br />dependentVariable: 140.0\",\"Date: 2016-09-01<br />dependentVariable: 137.9\",\"Date: 2016-12-01<br />dependentVariable: 137.2\",\"Date: 2017-03-01<br />dependentVariable: 136.7\",\"Date: 2017-06-01<br />dependentVariable: 136.6\",\"Date: 2017-09-01<br />dependentVariable: 137.6\",\"Date: 2017-12-01<br />dependentVariable: 138.7\",\"Date: 2018-03-01<br />dependentVariable: 144.1\",\"Date: 2018-06-01<br />dependentVariable: 149.0\",\"Date: 2018-09-01<br />dependentVariable: 149.7\",\"Date: 2018-12-01<br />dependentVariable: 149.6\",\"Date: 2019-03-01<br />dependentVariable: 148.6\",\"Date: 2019-06-01<br />dependentVariable: 150.8\",\"Date: 2019-09-01<br />dependentVariable: 152.8\",\"Date: 2019-12-01<br />dependentVariable: 153.6\",\"Date: 2020-03-01<br />dependentVariable: 152.1\",\"Date: 2020-06-01<br />dependentVariable: 152.6\",\"Date: 2020-09-01<br />dependentVariable: 153.8\",\"Date: 2020-12-01<br />dependentVariable: 157.0\",\"Date: 2021-03-01<br />dependentVariable: 162.2\",\"Date: 2021-06-01<br />dependentVariable: 163.5\",\"Date: 2021-09-01<br />dependentVariable: 165.3\",\"Date: 2021-12-01<br />dependentVariable: 173.6\",\"Date: 2022-03-01<br />dependentVariable: 174.8\",\"Date: 2022-06-01<br />dependentVariable: 180.9\",\"Date: 2022-09-01<br />dependentVariable: 187.8\",\"Date: 2022-12-01<br />dependentVariable: 188.6\",\"Date: 2023-03-01<br />dependentVariable: 194.8\",\"Date: 2023-06-01<br />dependentVariable: 194.4\",\"Date: 2023-09-01<br />dependentVariable: 196.0\",\"Date: 2023-12-01<br />dependentVariable: 201.5\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.6456692913385824,\"color\":\"rgba(0,255,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[18322,18414,18506,18597,18687,18779,18871,18962,19052,19144,19236,19327,19417,19509,19601,19692],\"y\":[154.48266161073312,152.52611363597083,155.46699504277001,159.41152071199156,161.79765931642123,167.52558015778069,167.56517018439416,170.48749767960032,184.59326818230289,184.49518704032093,191.22939744547594,196.27270786895619,193.32465515949508,200.21027172706465,191.65924584183327,192.38862088522777],\"text\":[\"Date: 2020-03-01<br />Predicted: 154.4827<br />DataPartition: Test\",\"Date: 2020-06-01<br />Predicted: 152.5261<br />DataPartition: Test\",\"Date: 2020-09-01<br />Predicted: 155.4670<br />DataPartition: Test\",\"Date: 2020-12-01<br />Predicted: 159.4115<br />DataPartition: Test\",\"Date: 2021-03-01<br />Predicted: 161.7977<br />DataPartition: Test\",\"Date: 2021-06-01<br />Predicted: 167.5256<br />DataPartition: Test\",\"Date: 2021-09-01<br />Predicted: 167.5652<br />DataPartition: Test\",\"Date: 2021-12-01<br />Predicted: 170.4875<br />DataPartition: Test\",\"Date: 2022-03-01<br />Predicted: 184.5933<br />DataPartition: Test\",\"Date: 2022-06-01<br />Predicted: 184.4952<br />DataPartition: Test\",\"Date: 2022-09-01<br />Predicted: 191.2294<br />DataPartition: Test\",\"Date: 2022-12-01<br />Predicted: 196.2727<br />DataPartition: Test\",\"Date: 2023-03-01<br />Predicted: 193.3247<br />DataPartition: Test\",\"Date: 2023-06-01<br />Predicted: 200.2103<br />DataPartition: Test\",\"Date: 2023-09-01<br />Predicted: 191.6592<br />DataPartition: Test\",\"Date: 2023-12-01<br />Predicted: 192.3886<br />DataPartition: Test\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.6456692913385824,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"dot\"},\"hoveron\":\"points\",\"name\":\"Test\",\"legendgroup\":\"Test\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Time Series of Quarterly Price Index (Actual index in green)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[12693.75,20025.25],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"tickvals\":[12784,14610,16436,18262],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[77.390000000000001,207.41],\"tickmode\":\"array\",\"ticktext\":[\"100\",\"125\",\"150\",\"175\",\"200\"],\"tickvals\":[100,125,150,175,200],\"categoryorder\":\"array\",\"categoryarray\":[\"100\",\"125\",\"150\",\"175\",\"200\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Price Index\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"DataPartition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"507049cf2046\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"5070174b2470\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"507049cf2046\",\"visdat\":{\"507049cf2046\":[\"function (y) \",\"x\"],\"5070174b2470\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n:::\n\n# 4 UI Design\n\n## 4.1 Storyboard and UI Design for Random Forest module\n\n::: {.callout-note icon=\"false\"}\n#### Selection of Shiny UI components for parameter inputs\n\nUI components for parameter inputs are:\n\n-   Variables selection\n    -   Type of data to use for prediction - Use **Toggle Input** to toggle between actual indices and derived percentage change\n    -   Forecast from which year - Use **Slider Input**, values from 2018 to 2022\n    -   Explanatory variables - Use **Select Input** to choose from a pre-defined list\n    -   Which property price index to forecast - Use **Select Input** to choose from a pre-defined list\n-   Model parameters\n    -   Number of trees (mtree) - Use **Slider Input**, values from 100 to 500\n    -   Number of variables sampled for each tree (mtry) - Use **Slider Input,** values from 2 to 8\n    -   Maximal size of terminal nodes in each tree (nodesize) - Use **Slider Input,** values from 1 to 8\n-   **Submit Button** for user to run the model with the inputs selected\n:::\n\n::: panel-tabset\n#### Tab 1 - Model Result\n\n![](images/clipboard-4084086158.png)\n\n#### Tab 2 - Variable Importance\n\n![](images/clipboard-3611799609.png)\n\n#### Tab 3 - Time Series\n\n![](images/clipboard-3886939445.png)\n:::\n\n## 4.2 Storyboard and UI Design for Gradient Boost module\n\n::: {.callout-note icon=\"false\"}\n#### Selection of Shiny UI components for parameter inputs\n\nUI components for parameter inputs are:\n\n-   Variables selection\n    -   Type of data to use for prediction - Use **Toggle Input** to toggle between actual indices and derived percentage change\n    -   Forecast from which year - Use **Slider Input**, values from 2018 to 2022\n    -   Explanatory variables - Use **Select Input** to choose from a pre-defined list\n    -   Which property price index to forecast - Use **Select Input** to choose from a pre-defined list\n-   Model parameters\n    -   Number of trees (n.trees) - Use **Slider Input**, values from 100 to 500\n    -   Maximum depth of each tree (interaction.depth) - Use **Slider Input**, values from 4 to 10\n    -   Learning rate (shrinkage) - Use **Slider Input**, values from 0.01 to 0.1\n    -   Minimum number of observations in terminal node (n.minobsinnode) - Use **Slider Input**, values from 5 to 10\n    -   Fraction of observations sampled for each tree (bag.fraction) - Use **Slider Input**, values from 0.5 to 1.0\n    -   Distribution to use - Use **Select Input** to choose from 'gaussian', 'laplace' or 'tdist' for regression models\n-   **Submit Button** for user to run the model with the inputs selected\n:::\n\n::: panel-tabset\n#### Tab 1 - Model Result\n\n![](images/clipboard-2178951649.png)\n\n#### Tab 2 - Time Series\n\n![](images/clipboard-640767665.png)\n:::\n\n## 4.3 Storyboard and UI Design for Prophet module\n\n::: {.callout-note icon=\"false\"}\n#### Selection of Shiny UI components for parameter inputs\n\nUI components for parameter inputs are:\n\n-   Variables selection\n    -   Type of data to use for prediction - Use **Toggle Input** to toggle between actual indices and derived percentage change\n    -   Forecast from which year - Use **Slider Input**, values from 2018 to 2022\n    -   Explanatory variables - Use **Select Input** to choose from a pre-defined list\n    -   Which property price index to forecast - Use **Select Input** to choose from a pre-defined list\n-   Model parameters\n    -   Mode for handling seasonalities (seasonality.mode) - Use **Select Input** to choose from additive' (default) or 'multiplicative'\n    -   Growth modeling (growth) - Use **Select Input** to choose from 'linear', 'logistic', 'flat'\n    -   Fit yearly seasonality (yearly.seasonality) - Use **Select Input** to choose from values 'auto', TRUE, FALSE\n-   **Submit Button** for user to run the model with the inputs selected\n:::\n\n::: panel-tabset\n#### Tab 1 - Model Result\n\n![](images/clipboard-3667159418.png)\n\n#### Tab 2 - Time Series\n\n![](images/clipboard-374491442.png)\n:::\n\n# 5 Conclusion\n\nThrough this prototyping exercise, I have managed to identify the necessary R packages needed to build the forecasting models, and used them to build the prototype models. Furthermore, I had also determined the model variables and parameters that will be exposed for users to choose from, as well as identified useful outputs in terms of plots that will be presented to the user on the R Shiny application subsequently. The appropriate Shiny UI components were also identified, following these principles of (1) using a toggle for toggling between 2 values, (2) using a select list where users should choose from a pre-defined list, and (3) using a slider bar for range of numerical values.\n\nAll in all, the codes are ready to be integrated into a R Shiny App, and through this, I have experienced the usefulness of prototyping in application development.\n",
    "supporting": [
      "Take-home_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}