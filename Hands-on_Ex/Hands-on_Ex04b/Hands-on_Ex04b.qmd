---
title: "Hands-on Exercise 4b"
date: "January 25, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  freeze: true
  warning: false
  message: false
editor: visual
---

# **Visual Statistical Analysis**

## 1 Learning Outcome

In this hands-on exercise, you will gain hands-on experience on using:

-   ggstatsplot package to create visual graphics with rich statistical information,
-   performance package to visualise model diagnostics, and
-   parameters package to visualise model parameters

## 2 **Visual Statistical Analysis with ggstatsplot**

-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/) is an extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.

    -   To provide alternative statistical inference methods by default.
    -   To follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the [APA](https://my.ilstu.edu/~jhkahn/apastats.html) gold standard for statistical reporting. For example, here are results from a robust t-test:

## 3 Getting Started

### 3.1 **Installing and launching R packages**

In this exercise, **ggstatsplot** and **tidyverse** will be used.

```{r}
pacman::p_load(ggstatsplot, tidyverse)
```

### 3.2 **Importing data**

```{r}
exam = read_csv("data/Exam_data.csv")
```

### 3.3 **One-sample test: *gghistostats()* method**

In the code chunk below, [*gghistostats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) is used to to build an visual of one-sample test on English scores.

```{r}
set.seed(1234)

gghistostats(data=exam,
             x=ENGLISH,
             type="bayes",
             test.value=60,
             xlab="English scores")
```

Default information: - statistical details - Bayes Factor - sample sizes - distribution summary

### 3.4 **Unpacking the Bayes Factor**

-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.

-   That’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.

-   When we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as

<!-- -->

-   The [**Schwarz criterion**](https://www.statisticshowto.com/bayesian-information-criterion/) is one of the easiest ways to calculate rough approximation of the Bayes Factor.

### 3.5 **How to interpret Bayes Factor**

A **Bayes Factor** can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by [Lee and Wagenmakers](https://www-tandfonline-com.libproxy.smu.edu.sg/doi/pdf/10.1080/00031305.1999.10474443?needAccess=true) in 2013:

### 3.6 **Two-sample mean test: *ggbetweenstats()***

In the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.

```{r}
ggbetweenstats(data=exam,
               x=GENDER,
               y=MATHS,
               type="np",
               messages=FALSE)
```

Default information: - statistical details - Bayes Factor - sample sizes - distribution summary

### 3.7 **Oneway ANOVA Test: *ggbetweenstats()* method**

In the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for One-way ANOVA test on English score by race.

```{r}
ggbetweenstats(data=exam,
               x=RACE,
               y=ENGLISH,
               type="p",
               mean.ci=T,
               pairwise_comparisons=T,
               pairwise.display="s",
               p.adjust.method="fdr",
               messages=F)
```

3.7.1 ggbetweenstats - Summary of tests

{Missing links}

### 3.8 **Significant Test of Correlation: *ggscatterstats()***

In the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.

```{r}
ggscatterstats(data=exam,
               x=MATHS,
               y=ENGLISH,
               marginal=F
)
```

### 3.9 **Significant Test of Association (Depedence) : *ggbarstats()* methods**

In the code chunk below, the Maths scores is binned into a 4-class variable by using [*cut()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut).

```{r}
exam1 <- exam %>% 
  mutate(MATHS_bins = 
           cut(MATHS,
               breaks = c(0,60,75,85,100)))
```

In this code chunk below [*ggbarstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html) is used to build a visual for Significant Test of Association.

```{r}
ggbarstats(exam1,
           x=MATHS_bins,
           y=GENDER)
```

## 4 **Visualising Models**

In this section, you will learn how to visualise model diagnostic and model parameters by using parameters package.

-   Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.

## 5 **Getting Started**

### 5.1 **Installing and loading the required libraries**

```{r}
pacman::p_load(readxl, performance, parameters, see)
```

### 5.2 **Importing Excel file: readxl methods**

In the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [**readxl**](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```

### 5.3 **Multiple Regression Model using lm()**

The code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.

```{r}
model <- lm(Price~Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)
model
```

### 5.4 **Model Diagnostic: checking for multicolinearity:**

In the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/) package.

```{r}
check_collinearity(model)
```

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

### 5.5 **Model Diagnostic: checking normality assumption**

In the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/) package.

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
plot(check_n)
```

### 5.6 **Model Diagnostic: Check model for homogeneity of variances**

In the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/) package.

```{r}
check_h <- check_heteroscedasticity(model1)
plot(check_h)
```

### 5.7 **Model Diagnostic: Complete check**

```{r}
check_model(model1)
```

### 5.8 **Visualising Regression Parameters: see methods**

In the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.

```{r}
plot(parameters(model1))
```

### 5.9 **Visualising Regression Parameters: *ggcoefstats()* methods**

```{r}
ggcoefstats(model1,
            output = "plot")
```
